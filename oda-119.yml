tosca_definitions_version: tosca_simple_yaml_1_0
####################
capability_types:
####################

  ##################
  # Capabilities to implement SID 
  ####################

  tosca.capabilities.PhysicalResourceSpecAttributes:
    descripton: Equates to tosca.nodes.TMForum.Models.SIDModels.ResourceDomain.ResourceSpecificationABE.PhysicalResourceSpecificationABE.PhysicalResourceSpecAttributes
    # No need to use an inheritance tree for this as it contains no inherited attributes. No harm in doing so if it makes sense for automated mapping but for now derive from root
    derived_from: tosca.capabilities.Root
    properties:
      modelNumber:
        type: string 
        required: True
      vendorName:
        type: string
        required: True
    attributes:
    # These are listed as attributes because they are read only; not because they are optional
      skuNumber:
        type: string
        required: False
      partNumber:
        type: string
        required: False

  ####################
  # Capabilities to implement vendor specific features 
  ####################

  Acme.ComplexQosFeature:
    derived_from: tosca.capabilities.Root
    # TODO A capability probably maps to a SID (resource)function so resolve how to derive SID function from tosca capabilities
    description: The ComplexQosFeature capability is an example of how a (vendor specific) feature, when included on a Node Type or Template defintion, indicates that the node can implement that feature
    properties:
      enabled:
        type: boolean
        required: False
        default: False



####################
node_types:
####################

  ###################
  # node types from SID model
  ###################
  
  tosca.nodes.TMForum:
    derived_from: tosca.nodes.Root

  tosca.nodes.TMForum.Models:
    derived_from: tosca.nodes.TMForum
  
  tosca.nodes.TMForum.Models.SIDModels:
    derived_from: tosca.nodes.TMForum.Models
    properties:
      # mapping examples of those attributes of SID RootEntity which are not relationships and are not read only to TOSCA properties
      # JSON and therefore YAML and TOSCA does not have a syntax to declare that an attribute must be unique and so that (and
      # possibly other) aspect of the SID defintion is lost when mapping to TOSCA
      description:
        type: string
        required: False
        description: This is a string, and defines a textual identifier of an object
      name:
        type: string
        description: Represents a user-friendly identifier of an object...
        required: False
    attributes:
    # If there were any SID read only attributes they would be mapped to TOSCA attributes here
      

    
  tosca.nodes.TMForum.Models.SIDModels.ResourceDomain:
    derived_from: tosca.nodes.TMForum.Models.SIDModels
    
  tosca.nodes.TMForum.Models.SIDModels.ResourceDomain.ResourceABE:
    derived_from: tosca.nodes.TMForum.Models.SIDModels.ResourceDomain
    
  tosca.nodes.TMForum.Models.SIDModels.ResourceDomain.ResourceABE.CompoundResourceABE:
    derived_from: tosca.nodes.TMForum.Models.SIDModels.ResourceDomain.ResourceABE
    
  tosca.nodes.TMForum.Models.SIDModels.ResourceDomain.ResourceABE.CompoundResourceABE.CompoundResource:
    derived_from: tosca.nodes.TMForum.Models.SIDModels.ResourceDomain.ResourceABE.CompoundResourceABE
  
  tosca.nodes.TMForum.Models.SIDModels.ResourceDomain.ResourceABE.PhysicalResource:
    description: Equates to PhysicalResourceSpec in TM Forum Information Model (SID)
    derived_from: tosca.nodes.TMForum.Models.SIDModels.ResourceDomain.ResourceABE
    # In SID a PhysicalResourceSpec has a 1 : 0..1 releation to PhysicalResourceAttributes
    # To model this in TOSCA we have these choices:
    # 1 use capability
      # We use this option
    # 2 use requirements: - dependency: capability
      # This places a requirement on node instances derived from this spec that they MUST instantiate a node with the capabiliies defined in PhysicalResourceAttributes
      # which is not what we want
    # 3 use requirements: - dependency: node
      # This places a requirement on node instances derived from this spec that they MUST instantiate a node with the type PhysicalResourceAttributes
      # which is not what we want
    # 4 Flatten the SID and add the attributes in this node
      # this validates but
        # loses the fact that if partNumber is present then vendorName must also be present 
        # attributes: 
        #   modelNumber:
        #     type: string
        #     required: false
        #   vendorName:
        #     type: string
        #     required: true
        #   skuNumber:
        #     type: string
        #     required: false
        #   partNumber:
        #     type: string
        #   required: true
    # 5 Make two node defintions, one with and one without the extension
      # but that doubles the number of child entities
    # 6 Use capability but to a new intermediate node type
      # Does not seem to add anything helpful
    capabilities:
      PhysicalResourceSpecFurtherExtendedBy:
        type: tosca.capabilities.PhysicalResourceSpecAttributes
    
  tosca.nodes.TMForum.Models.SIDModels.ResourceDomain.ResourceABE.PhysicalResource.Hardware:
    derived_from: tosca.nodes.TMForum.Models.SIDModels.ResourceDomain.ResourceABE.PhysicalResource

  tosca.nodes.TMForum.Models.SIDModels.ResourceDomain.ResourceABE.PhysicalResource.Hardware.PhysicalPort:
    derived_from: tosca.nodes.TMForum.Models.SIDModels.ResourceDomain.ResourceABE.PhysicalResource.Hardware
    capabilities:
      # SID does not define the linkable capability but all tosca ports are linkable
      link:
        type: tosca.capabilities.network.Linkable
   
  tosca.nodes.TMForum.Models.SIDModels.ResourceDomain.ResourceABE.PhysicalResource.Hardware.ManagedHardware:
    derived_from: tosca.nodes.TMForum.Models.SIDModels.ResourceDomain.ResourceABE.PhysicalResource.Hardware

  tosca.nodes.TMForum.Models.SIDModels.ResourceDomain.ResourceABE.PhysicalResource.Hardware.ManagedHardware.PhysicalContainer:
    derived_from: tosca.nodes.TMForum.Models.SIDModels.ResourceDomain.ResourceABE.PhysicalResource.Hardware.ManagedHardware

  tosca.nodes.TMForum.Models.SIDModels.ResourceDomain.ResourceABE.PhysicalResource.Hardware.ManagedHardware.PhysicalContainer.Equipment:
    derived_from: tosca.nodes.TMForum.Models.SIDModels.ResourceDomain.ResourceABE.PhysicalResource.Hardware.ManagedHardware.PhysicalContainer

  tosca.nodes.TMForum.Models.SIDModels.ResourceDomain.ResourceABE.PhysicalResource.Hardware.ManagedHardware.PhysicalContainer.Equipment.Card:
    derived_from: tosca.nodes.TMForum.Models.SIDModels.ResourceDomain.ResourceABE.PhysicalResource.Hardware.ManagedHardware.PhysicalContainer.Equipment

  tosca.nodes.TMForum.Models.SIDModels.ResourceDomain.ResourceABE.PhysicalResource.Hardware.ManagedHardware.PhysicalContainer.EquipmentHolder:
    derived_from: tosca.nodes.TMForum.Models.SIDModels.ResourceDomain.ResourceABE.PhysicalResource.Hardware.ManagedHardware.PhysicalContainer
  
  ###################
  # node types for generic modular router
  ###################
  tosca.nodes.ModularRouter:
    derived_from: tosca.nodes.TMForum.Models.SIDModels.ResourceDomain.ResourceABE.CompoundResourceABE.CompoundResource
    properties:
      property1:
        type: string
      property2:
          type: integer
    attributes:
      attribute1:
        type: float
      attribute2:
        type: boolean
    requirements:
      - router_software:
          node: tosca.nodes.RouterSoftware
          relationship: dependancy
      - chassis:
          node: tosca.nodes.chassis
          relationship: dependancy

  tosca.nodes.RouterSoftware:
    derived_from: tosca.nodes.SoftwareComponent
    # TODO This probably maps to a SID SoftwareSpecification so resolve how to derive SID entity and tosca node
    requirements:
      - host: 
          node: tosca.nodes.Compute.NetworkDevice

  tosca.nodes.Compute.NetworkDevice:
    derived_from: tosca.nodes.Compute
    description: provides level of indirection between SoftwareComponent and Processor-card
    # TODO Level of indirection probably maps to a SID PhysicalBlackBoxSpec so resolve how to derive SID entity and tosca node
    requirements:
      - processor_card:
          node: tosca.nodes.processor_card
          relationship: dependancy

  tosca.nodes.processor_card:
    derived_from: tosca.nodes.TMForum.Models.SIDModels.ResourceDomain.ResourceABE.PhysicalResource.Hardware.ManagedHardware.PhysicalContainer.Equipment.Card
    requirements:
      - slot:
          node: tosca.nodes.slot
          relationship: dependancy

  tosca.nodes.PhysicalPort.OnCard:
    derived_from: tosca.nodes.TMForum.Models.SIDModels.ResourceDomain.ResourceABE.PhysicalResource.Hardware.PhysicalPort
    requirements:
      - router_software:
          node: tosca.nodes.RouterSoftware
          relationship: dependancy
      - port_card:
          node: tosca.nodes.port_card
          relationship: dependancy

  tosca.nodes.port_card:
    derived_from: tosca.nodes.TMForum.Models.SIDModels.ResourceDomain.ResourceABE.PhysicalResource.Hardware.ManagedHardware.PhysicalContainer.Equipment.Card
    requirements:
      - slot:
          node: tosca.nodes.slot
          relationship: dependancy

  tosca.nodes.slot:
    derived_from: tosca.nodes.TMForum.Models.SIDModels.ResourceDomain.ResourceABE.PhysicalResource.Hardware.ManagedHardware.PhysicalContainer.EquipmentHolder
    requirements:
      - chassis:
          node: tosca.nodes.chassis
          relationship: dependancy

  tosca.nodes.chassis:
      derived_from: tosca.nodes.TMForum.Models.SIDModels.ResourceDomain.ResourceABE.PhysicalResource.Hardware.ManagedHardware.PhysicalContainer.Equipment      
      
  ###################
  # node types for Acme modular router
  ###################

  tosca.nodes.port_card.Acme.1111:
  # We are going to use SID PhysicalResourceSpecFurtherExtendedBy in which both vendorName and modelNumber are mandatory
  # and so we derive ACME model 1111 directly from port_card rather than defining an Acme port_card and inheriting from that
    derived_from: tosca.nodes.port_card
    capabilities:
      # Including PhysicalResourceSpecFurtherExtendedBy as I want to specifiy the extended properties
      PhysicalResourceSpecFurtherExtendedBy:
        properties:
          # These are mandatory
          modelNumber: "1111"
          vendorName: Acme
        attributes:
          # These are optional and would not normally be specified in a topology template
          #skuNumber: c
          #partNumber: d

  tosca.nodes.processor_card.Acme.2222:
    derived_from: tosca.nodes.processor_card
    capabilities:
      # Including PhysicalResourceSpecFurtherExtendedBy as I want to specifiy the extended properties
      PhysicalResourceSpecFurtherExtendedBy:
        properties:
          # These are mandatory
          modelNumber: "2222"
          vendorName: Acme
        attributes:
          # These are optional and would not normally be specified in a topology template
          #skuNumber: c
          #partNumber: d

  tosca.nodes.PhysicalPort.OnCard.Acme:
    derived_from: tosca.nodes.PhysicalPort.OnCard
    requirements:
      - router_software:
          # This is one way of specifying the dependancy is on type of Acme
          node: tosca.nodes.RouterSoftware.Acme
      - port_card:
          node: tosca.nodes.port_card
          # This is another way of specifying the dependancy is on type of Acme
          node_filter:
          - port_card:
            properties:
              vendorName: { equal: Acme }
          relationship: dependancy

  tosca.nodes.RouterSoftware.Acme:
    derived_from: tosca.nodes.RouterSoftware

  ###################
  # node types to add the advanced QoS feature
  ###################

  tosca.nodes.PhysicalPort.OnCard.Acme.Advanced:
    derived_from: tosca.nodes.PhysicalPort.OnCard.Acme
    capabilities: 
      complexQoS:
        type: Acme.ComplexQosFeature
      
    # Other Avanced features may be listed as subsequent capabilities


####################
description: Template for physical router within a tosca node.network
topology_template:
####################
  node_templates:

    my_port:
      type: tosca.nodes.PhysicalPort.OnCard.Acme.Advanced
      capabilities:
        complexQoS: 
          properties:
            enabled: True

    router:
      type: tosca.nodes.ModularRouter
      properties:
        property1: a
        property2: 1
      attributes:
        attribute1: 2.0
        attribute2: true


    

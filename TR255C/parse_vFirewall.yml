description: |-
  A TOSCA template of the firewall defined in TR255B for inclusion in TR255C R20

  Virtual Firewall as described in TR255C
nodeTemplates:
  CP2:
    description: |-
      The TOSCA Port node represents a logical entity that associates between Compute and Network normative types.
      The Port node type effectively represents a single virtual NIC on the Compute node instance.
    types:
      tosca.nodes.Root:
        metadata:
          citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
          citation_location: 5.9.1
          normative: "true"
      tosca.nodes.network.Port:
        metadata:
          citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
          citation_location: 8.5.2
          normative: "true"
    directives: []
    properties:
      is_default:
        description: Set is_default=true to apply a default gateway route on the running
          compute instance to the associated network gateway. Only one port that is
          associated to single compute node can set as default=true.
        value: false
      order:
        description: 'The order of the NIC on the compute instance (e.g. eth2). Note:
          when binding more than one port to a single compute (aka multi vNICs) and
          ordering is desired, it is *mandatory* that all ports will be set with an
          order value and. The order values must represent a positive, arithmetic
          progression that starts with 0 (e.g. 0, 1, 2, ..., n).'
        value: 0
    attributes:
      ip_address:
        description: The IP address would be assigned to the associated compute instance.
        value: null
      state:
        description: The state of the node instance.
        value: initial
      tosca_id:
        description: A unique identifier of the realized instance of a Node Template
          that derives from any TOSCA normative type.
        value: null
      tosca_name:
        description: This attribute reflects the name of the Node Template as defined
          in the TOSCA service template. This name is not unique to the realized instance
          model of corresponding deployed application as each template in the model
          can result in one or more instances (e.g., scaled) when orchestrated to
          a provider environment.
        value: null
    requirements:
    - name: link
      capabilityTypeName: tosca.capabilities.network.Linkable
      capabilityName: ""
      nodeTypeName: ""
      nodeTemplateName: Link1
      nodeTemplatePropertyConstraints: {}
      capabilityPropertyConstraints: {}
      relationship:
        description: This relationship type represents an association relationship
          between Port and Network node types.
        types:
          tosca.relationships.DependsOn:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.7.2
              normative: "true"
          tosca.relationships.Root:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.7.1
              normative: "true"
          tosca.relationships.network.LinksTo:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 8.5.4
              normative: "true"
        properties: {}
        attributes:
          state:
            description: The state of the relationship instance.
            value: initial
          tosca_id:
            description: A unique identifier of the realized instance of a Relationship
              Template that derives from any TOSCA normative type.
            value: null
          tosca_name:
            description: This attribute reflects the name of the Relationship Template
              as defined in the TOSCA service template. This name is not unique to
              the realized instance model of corresponding deployed application as
              each template in the model can result in one or more instances (e.g.,
              scaled) when orchestrated to a provider environment.
            value: null
        interfaces:
          Configure:
            description: The lifecycle interfaces define the essential, normative
              operations that each TOSCA Relationship Types may support.
            types:
              tosca.interfaces.Root:
                metadata:
                  citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                  citation_location: 5.8.3
                  normative: "true"
              tosca.interfaces.relationship.Configure:
                metadata:
                  citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                  citation_location: 5.8.5
                  normative: "true"
            inputs: {}
            operations:
              add_source:
                description: Operation to notify the target node of a source node
                  which is now available via a relationship.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              add_target:
                description: Operation to notify the source node of a target node
                  being added via a relationship.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              post_configure_source:
                description: Operation to post-configure the source endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              post_configure_target:
                description: Operation to post-configure the target endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              pre_configure_source:
                description: Operation to pre-configure the source endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              pre_configure_target:
                description: Operation to pre-configure the target endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              remove_source:
                description: Operation to remove the source node.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              remove_target:
                description: Operation to remove a target node.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              target_changed:
                description: Operation to notify source some property or attribute
                  of the target changed
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
            notifications: {}
      path: topology_template.node_templates["CP2"].requirements[0]
    - name: binding
      capabilityTypeName: tosca.capabilities.network.Bindable
      capabilityName: ""
      nodeTypeName: SWI1
      nodeTemplateName: ""
      nodeTemplatePropertyConstraints: {}
      capabilityPropertyConstraints: {}
      relationship:
        description: This type represents a network association relationship between
          Port and Compute node types.
        types:
          tosca.relationships.DependsOn:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.7.2
              normative: "true"
          tosca.relationships.Root:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.7.1
              normative: "true"
          tosca.relationships.network.BindsTo:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 8.5.5
              normative: "true"
        properties: {}
        attributes:
          state:
            description: The state of the relationship instance.
            value: initial
          tosca_id:
            description: A unique identifier of the realized instance of a Relationship
              Template that derives from any TOSCA normative type.
            value: null
          tosca_name:
            description: This attribute reflects the name of the Relationship Template
              as defined in the TOSCA service template. This name is not unique to
              the realized instance model of corresponding deployed application as
              each template in the model can result in one or more instances (e.g.,
              scaled) when orchestrated to a provider environment.
            value: null
        interfaces:
          Configure:
            description: The lifecycle interfaces define the essential, normative
              operations that each TOSCA Relationship Types may support.
            types:
              tosca.interfaces.Root:
                metadata:
                  citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                  citation_location: 5.8.3
                  normative: "true"
              tosca.interfaces.relationship.Configure:
                metadata:
                  citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                  citation_location: 5.8.5
                  normative: "true"
            inputs: {}
            operations:
              add_source:
                description: Operation to notify the target node of a source node
                  which is now available via a relationship.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              add_target:
                description: Operation to notify the source node of a target node
                  being added via a relationship.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              post_configure_source:
                description: Operation to post-configure the source endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              post_configure_target:
                description: Operation to post-configure the target endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              pre_configure_source:
                description: Operation to pre-configure the source endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              pre_configure_target:
                description: Operation to pre-configure the target endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              remove_source:
                description: Operation to remove the source node.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              remove_target:
                description: Operation to remove a target node.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              target_changed:
                description: Operation to notify source some property or attribute
                  of the target changed
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
            notifications: {}
      path: topology_template.node_templates["CP2"].requirements[1]
    capabilities:
      feature:
        description: The Node capability indicates the base capabilities of a TOSCA
          Node Type.
        types:
          tosca.capabilities.Node:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.5.2
              normative: "true"
              role: feature
          tosca.capabilities.Root:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.5.1
              normative: "true"
        properties: {}
        attributes: {}
        minRelationshipCount: 0
        maxRelationshipCount: -1
    interfaces:
      Standard:
        description: This lifecycle interface defines the essential, normative operations
          that TOSCA nodes may support.
        types:
          tosca.interfaces.Root:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.8.3
              normative: "true"
          tosca.interfaces.node.lifecycle.Standard:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.8.4
              normative: "true"
        inputs: {}
        operations:
          configure:
            description: Standard lifecycle configure operation.
            implementation: ""
            dependencies: []
            inputs: {}
            timeout: -1
            host: ""
          create:
            description: Standard lifecycle create operation.
            implementation: ""
            dependencies: []
            inputs: {}
            timeout: -1
            host: ""
          delete:
            description: Standard lifecycle delete operation.
            implementation: ""
            dependencies: []
            inputs: {}
            timeout: -1
            host: ""
          start:
            description: Standard lifecycle start operation.
            implementation: ""
            dependencies: []
            inputs: {}
            timeout: -1
            host: ""
          stop:
            description: Standard lifecycle stop operation.
            implementation: ""
            dependencies: []
            inputs: {}
            timeout: -1
            host: ""
        notifications: {}
    artifacts: {}
  CP3:
    description: |-
      The TOSCA Port node represents a logical entity that associates between Compute and Network normative types.
      The Port node type effectively represents a single virtual NIC on the Compute node instance.
    types:
      tosca.nodes.Root:
        metadata:
          citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
          citation_location: 5.9.1
          normative: "true"
      tosca.nodes.network.Port:
        metadata:
          citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
          citation_location: 8.5.2
          normative: "true"
    directives: []
    properties:
      is_default:
        description: Set is_default=true to apply a default gateway route on the running
          compute instance to the associated network gateway. Only one port that is
          associated to single compute node can set as default=true.
        value: false
      order:
        description: 'The order of the NIC on the compute instance (e.g. eth2). Note:
          when binding more than one port to a single compute (aka multi vNICs) and
          ordering is desired, it is *mandatory* that all ports will be set with an
          order value and. The order values must represent a positive, arithmetic
          progression that starts with 0 (e.g. 0, 1, 2, ..., n).'
        value: 0
    attributes:
      ip_address:
        description: The IP address would be assigned to the associated compute instance.
        value: null
      state:
        description: The state of the node instance.
        value: initial
      tosca_id:
        description: A unique identifier of the realized instance of a Node Template
          that derives from any TOSCA normative type.
        value: null
      tosca_name:
        description: This attribute reflects the name of the Node Template as defined
          in the TOSCA service template. This name is not unique to the realized instance
          model of corresponding deployed application as each template in the model
          can result in one or more instances (e.g., scaled) when orchestrated to
          a provider environment.
        value: null
    requirements:
    - name: link
      capabilityTypeName: tosca.capabilities.network.Linkable
      capabilityName: ""
      nodeTypeName: ""
      nodeTemplateName: Link1
      nodeTemplatePropertyConstraints: {}
      capabilityPropertyConstraints: {}
      relationship:
        description: This relationship type represents an association relationship
          between Port and Network node types.
        types:
          tosca.relationships.DependsOn:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.7.2
              normative: "true"
          tosca.relationships.Root:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.7.1
              normative: "true"
          tosca.relationships.network.LinksTo:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 8.5.4
              normative: "true"
        properties: {}
        attributes:
          state:
            description: The state of the relationship instance.
            value: initial
          tosca_id:
            description: A unique identifier of the realized instance of a Relationship
              Template that derives from any TOSCA normative type.
            value: null
          tosca_name:
            description: This attribute reflects the name of the Relationship Template
              as defined in the TOSCA service template. This name is not unique to
              the realized instance model of corresponding deployed application as
              each template in the model can result in one or more instances (e.g.,
              scaled) when orchestrated to a provider environment.
            value: null
        interfaces:
          Configure:
            description: The lifecycle interfaces define the essential, normative
              operations that each TOSCA Relationship Types may support.
            types:
              tosca.interfaces.Root:
                metadata:
                  citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                  citation_location: 5.8.3
                  normative: "true"
              tosca.interfaces.relationship.Configure:
                metadata:
                  citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                  citation_location: 5.8.5
                  normative: "true"
            inputs: {}
            operations:
              add_source:
                description: Operation to notify the target node of a source node
                  which is now available via a relationship.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              add_target:
                description: Operation to notify the source node of a target node
                  being added via a relationship.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              post_configure_source:
                description: Operation to post-configure the source endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              post_configure_target:
                description: Operation to post-configure the target endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              pre_configure_source:
                description: Operation to pre-configure the source endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              pre_configure_target:
                description: Operation to pre-configure the target endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              remove_source:
                description: Operation to remove the source node.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              remove_target:
                description: Operation to remove a target node.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              target_changed:
                description: Operation to notify source some property or attribute
                  of the target changed
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
            notifications: {}
      path: topology_template.node_templates["CP3"].requirements[0]
    - name: binding
      capabilityTypeName: tosca.capabilities.network.Bindable
      capabilityName: ""
      nodeTypeName: SWI2
      nodeTemplateName: ""
      nodeTemplatePropertyConstraints: {}
      capabilityPropertyConstraints: {}
      relationship:
        description: This type represents a network association relationship between
          Port and Compute node types.
        types:
          tosca.relationships.DependsOn:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.7.2
              normative: "true"
          tosca.relationships.Root:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.7.1
              normative: "true"
          tosca.relationships.network.BindsTo:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 8.5.5
              normative: "true"
        properties: {}
        attributes:
          state:
            description: The state of the relationship instance.
            value: initial
          tosca_id:
            description: A unique identifier of the realized instance of a Relationship
              Template that derives from any TOSCA normative type.
            value: null
          tosca_name:
            description: This attribute reflects the name of the Relationship Template
              as defined in the TOSCA service template. This name is not unique to
              the realized instance model of corresponding deployed application as
              each template in the model can result in one or more instances (e.g.,
              scaled) when orchestrated to a provider environment.
            value: null
        interfaces:
          Configure:
            description: The lifecycle interfaces define the essential, normative
              operations that each TOSCA Relationship Types may support.
            types:
              tosca.interfaces.Root:
                metadata:
                  citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                  citation_location: 5.8.3
                  normative: "true"
              tosca.interfaces.relationship.Configure:
                metadata:
                  citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                  citation_location: 5.8.5
                  normative: "true"
            inputs: {}
            operations:
              add_source:
                description: Operation to notify the target node of a source node
                  which is now available via a relationship.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              add_target:
                description: Operation to notify the source node of a target node
                  being added via a relationship.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              post_configure_source:
                description: Operation to post-configure the source endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              post_configure_target:
                description: Operation to post-configure the target endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              pre_configure_source:
                description: Operation to pre-configure the source endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              pre_configure_target:
                description: Operation to pre-configure the target endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              remove_source:
                description: Operation to remove the source node.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              remove_target:
                description: Operation to remove a target node.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              target_changed:
                description: Operation to notify source some property or attribute
                  of the target changed
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
            notifications: {}
      path: topology_template.node_templates["CP3"].requirements[1]
    capabilities:
      feature:
        description: The Node capability indicates the base capabilities of a TOSCA
          Node Type.
        types:
          tosca.capabilities.Node:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.5.2
              normative: "true"
              role: feature
          tosca.capabilities.Root:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.5.1
              normative: "true"
        properties: {}
        attributes: {}
        minRelationshipCount: 0
        maxRelationshipCount: -1
    interfaces:
      Standard:
        description: This lifecycle interface defines the essential, normative operations
          that TOSCA nodes may support.
        types:
          tosca.interfaces.Root:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.8.3
              normative: "true"
          tosca.interfaces.node.lifecycle.Standard:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.8.4
              normative: "true"
        inputs: {}
        operations:
          configure:
            description: Standard lifecycle configure operation.
            implementation: ""
            dependencies: []
            inputs: {}
            timeout: -1
            host: ""
          create:
            description: Standard lifecycle create operation.
            implementation: ""
            dependencies: []
            inputs: {}
            timeout: -1
            host: ""
          delete:
            description: Standard lifecycle delete operation.
            implementation: ""
            dependencies: []
            inputs: {}
            timeout: -1
            host: ""
          start:
            description: Standard lifecycle start operation.
            implementation: ""
            dependencies: []
            inputs: {}
            timeout: -1
            host: ""
          stop:
            description: Standard lifecycle stop operation.
            implementation: ""
            dependencies: []
            inputs: {}
            timeout: -1
            host: ""
        notifications: {}
    artifacts: {}
  CP4:
    description: |-
      The TOSCA Port node represents a logical entity that associates between Compute and Network normative types.
      The Port node type effectively represents a single virtual NIC on the Compute node instance.
    types:
      tosca.nodes.Root:
        metadata:
          citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
          citation_location: 5.9.1
          normative: "true"
      tosca.nodes.network.Port:
        metadata:
          citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
          citation_location: 8.5.2
          normative: "true"
    directives: []
    properties:
      is_default:
        description: Set is_default=true to apply a default gateway route on the running
          compute instance to the associated network gateway. Only one port that is
          associated to single compute node can set as default=true.
        value: false
      order:
        description: 'The order of the NIC on the compute instance (e.g. eth2). Note:
          when binding more than one port to a single compute (aka multi vNICs) and
          ordering is desired, it is *mandatory* that all ports will be set with an
          order value and. The order values must represent a positive, arithmetic
          progression that starts with 0 (e.g. 0, 1, 2, ..., n).'
        value: 0
    attributes:
      ip_address:
        description: The IP address would be assigned to the associated compute instance.
        value: null
      state:
        description: The state of the node instance.
        value: initial
      tosca_id:
        description: A unique identifier of the realized instance of a Node Template
          that derives from any TOSCA normative type.
        value: null
      tosca_name:
        description: This attribute reflects the name of the Node Template as defined
          in the TOSCA service template. This name is not unique to the realized instance
          model of corresponding deployed application as each template in the model
          can result in one or more instances (e.g., scaled) when orchestrated to
          a provider environment.
        value: null
    requirements:
    - name: link
      capabilityTypeName: tosca.capabilities.network.Linkable
      capabilityName: ""
      nodeTypeName: ""
      nodeTemplateName: Link1
      nodeTemplatePropertyConstraints: {}
      capabilityPropertyConstraints: {}
      relationship:
        description: This relationship type represents an association relationship
          between Port and Network node types.
        types:
          tosca.relationships.DependsOn:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.7.2
              normative: "true"
          tosca.relationships.Root:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.7.1
              normative: "true"
          tosca.relationships.network.LinksTo:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 8.5.4
              normative: "true"
        properties: {}
        attributes:
          state:
            description: The state of the relationship instance.
            value: initial
          tosca_id:
            description: A unique identifier of the realized instance of a Relationship
              Template that derives from any TOSCA normative type.
            value: null
          tosca_name:
            description: This attribute reflects the name of the Relationship Template
              as defined in the TOSCA service template. This name is not unique to
              the realized instance model of corresponding deployed application as
              each template in the model can result in one or more instances (e.g.,
              scaled) when orchestrated to a provider environment.
            value: null
        interfaces:
          Configure:
            description: The lifecycle interfaces define the essential, normative
              operations that each TOSCA Relationship Types may support.
            types:
              tosca.interfaces.Root:
                metadata:
                  citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                  citation_location: 5.8.3
                  normative: "true"
              tosca.interfaces.relationship.Configure:
                metadata:
                  citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                  citation_location: 5.8.5
                  normative: "true"
            inputs: {}
            operations:
              add_source:
                description: Operation to notify the target node of a source node
                  which is now available via a relationship.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              add_target:
                description: Operation to notify the source node of a target node
                  being added via a relationship.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              post_configure_source:
                description: Operation to post-configure the source endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              post_configure_target:
                description: Operation to post-configure the target endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              pre_configure_source:
                description: Operation to pre-configure the source endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              pre_configure_target:
                description: Operation to pre-configure the target endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              remove_source:
                description: Operation to remove the source node.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              remove_target:
                description: Operation to remove a target node.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              target_changed:
                description: Operation to notify source some property or attribute
                  of the target changed
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
            notifications: {}
      path: topology_template.node_templates["CP4"].requirements[0]
    - name: binding
      capabilityTypeName: tosca.capabilities.network.Bindable
      capabilityName: ""
      nodeTypeName: SWI2
      nodeTemplateName: ""
      nodeTemplatePropertyConstraints: {}
      capabilityPropertyConstraints: {}
      relationship:
        description: This type represents a network association relationship between
          Port and Compute node types.
        types:
          tosca.relationships.DependsOn:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.7.2
              normative: "true"
          tosca.relationships.Root:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.7.1
              normative: "true"
          tosca.relationships.network.BindsTo:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 8.5.5
              normative: "true"
        properties: {}
        attributes:
          state:
            description: The state of the relationship instance.
            value: initial
          tosca_id:
            description: A unique identifier of the realized instance of a Relationship
              Template that derives from any TOSCA normative type.
            value: null
          tosca_name:
            description: This attribute reflects the name of the Relationship Template
              as defined in the TOSCA service template. This name is not unique to
              the realized instance model of corresponding deployed application as
              each template in the model can result in one or more instances (e.g.,
              scaled) when orchestrated to a provider environment.
            value: null
        interfaces:
          Configure:
            description: The lifecycle interfaces define the essential, normative
              operations that each TOSCA Relationship Types may support.
            types:
              tosca.interfaces.Root:
                metadata:
                  citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                  citation_location: 5.8.3
                  normative: "true"
              tosca.interfaces.relationship.Configure:
                metadata:
                  citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                  citation_location: 5.8.5
                  normative: "true"
            inputs: {}
            operations:
              add_source:
                description: Operation to notify the target node of a source node
                  which is now available via a relationship.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              add_target:
                description: Operation to notify the source node of a target node
                  being added via a relationship.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              post_configure_source:
                description: Operation to post-configure the source endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              post_configure_target:
                description: Operation to post-configure the target endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              pre_configure_source:
                description: Operation to pre-configure the source endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              pre_configure_target:
                description: Operation to pre-configure the target endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              remove_source:
                description: Operation to remove the source node.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              remove_target:
                description: Operation to remove a target node.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              target_changed:
                description: Operation to notify source some property or attribute
                  of the target changed
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
            notifications: {}
      path: topology_template.node_templates["CP4"].requirements[1]
    capabilities:
      feature:
        description: The Node capability indicates the base capabilities of a TOSCA
          Node Type.
        types:
          tosca.capabilities.Node:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.5.2
              normative: "true"
              role: feature
          tosca.capabilities.Root:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.5.1
              normative: "true"
        properties: {}
        attributes: {}
        minRelationshipCount: 0
        maxRelationshipCount: -1
    interfaces:
      Standard:
        description: This lifecycle interface defines the essential, normative operations
          that TOSCA nodes may support.
        types:
          tosca.interfaces.Root:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.8.3
              normative: "true"
          tosca.interfaces.node.lifecycle.Standard:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.8.4
              normative: "true"
        inputs: {}
        operations:
          configure:
            description: Standard lifecycle configure operation.
            implementation: ""
            dependencies: []
            inputs: {}
            timeout: -1
            host: ""
          create:
            description: Standard lifecycle create operation.
            implementation: ""
            dependencies: []
            inputs: {}
            timeout: -1
            host: ""
          delete:
            description: Standard lifecycle delete operation.
            implementation: ""
            dependencies: []
            inputs: {}
            timeout: -1
            host: ""
          start:
            description: Standard lifecycle start operation.
            implementation: ""
            dependencies: []
            inputs: {}
            timeout: -1
            host: ""
          stop:
            description: Standard lifecycle stop operation.
            implementation: ""
            dependencies: []
            inputs: {}
            timeout: -1
            host: ""
        notifications: {}
    artifacts: {}
  CP8:
    description: |-
      The TOSCA Port node represents a logical entity that associates between Compute and Network normative types.
      The Port node type effectively represents a single virtual NIC on the Compute node instance.
    types:
      tosca.nodes.Root:
        metadata:
          citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
          citation_location: 5.9.1
          normative: "true"
      tosca.nodes.network.Port:
        metadata:
          citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
          citation_location: 8.5.2
          normative: "true"
    directives: []
    properties:
      is_default:
        description: Set is_default=true to apply a default gateway route on the running
          compute instance to the associated network gateway. Only one port that is
          associated to single compute node can set as default=true.
        value: false
      order:
        description: 'The order of the NIC on the compute instance (e.g. eth2). Note:
          when binding more than one port to a single compute (aka multi vNICs) and
          ordering is desired, it is *mandatory* that all ports will be set with an
          order value and. The order values must represent a positive, arithmetic
          progression that starts with 0 (e.g. 0, 1, 2, ..., n).'
        value: 0
    attributes:
      ip_address:
        description: The IP address would be assigned to the associated compute instance.
        value: null
      state:
        description: The state of the node instance.
        value: initial
      tosca_id:
        description: A unique identifier of the realized instance of a Node Template
          that derives from any TOSCA normative type.
        value: null
      tosca_name:
        description: This attribute reflects the name of the Node Template as defined
          in the TOSCA service template. This name is not unique to the realized instance
          model of corresponding deployed application as each template in the model
          can result in one or more instances (e.g., scaled) when orchestrated to
          a provider environment.
        value: null
    requirements:
    - name: link
      capabilityTypeName: tosca.capabilities.network.Linkable
      capabilityName: ""
      nodeTypeName: ""
      nodeTemplateName: Link1
      nodeTemplatePropertyConstraints: {}
      capabilityPropertyConstraints: {}
      relationship:
        description: This relationship type represents an association relationship
          between Port and Network node types.
        types:
          tosca.relationships.DependsOn:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.7.2
              normative: "true"
          tosca.relationships.Root:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.7.1
              normative: "true"
          tosca.relationships.network.LinksTo:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 8.5.4
              normative: "true"
        properties: {}
        attributes:
          state:
            description: The state of the relationship instance.
            value: initial
          tosca_id:
            description: A unique identifier of the realized instance of a Relationship
              Template that derives from any TOSCA normative type.
            value: null
          tosca_name:
            description: This attribute reflects the name of the Relationship Template
              as defined in the TOSCA service template. This name is not unique to
              the realized instance model of corresponding deployed application as
              each template in the model can result in one or more instances (e.g.,
              scaled) when orchestrated to a provider environment.
            value: null
        interfaces:
          Configure:
            description: The lifecycle interfaces define the essential, normative
              operations that each TOSCA Relationship Types may support.
            types:
              tosca.interfaces.Root:
                metadata:
                  citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                  citation_location: 5.8.3
                  normative: "true"
              tosca.interfaces.relationship.Configure:
                metadata:
                  citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                  citation_location: 5.8.5
                  normative: "true"
            inputs: {}
            operations:
              add_source:
                description: Operation to notify the target node of a source node
                  which is now available via a relationship.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              add_target:
                description: Operation to notify the source node of a target node
                  being added via a relationship.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              post_configure_source:
                description: Operation to post-configure the source endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              post_configure_target:
                description: Operation to post-configure the target endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              pre_configure_source:
                description: Operation to pre-configure the source endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              pre_configure_target:
                description: Operation to pre-configure the target endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              remove_source:
                description: Operation to remove the source node.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              remove_target:
                description: Operation to remove a target node.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              target_changed:
                description: Operation to notify source some property or attribute
                  of the target changed
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
            notifications: {}
      path: topology_template.node_templates["CP8"].requirements[0]
    - name: binding
      capabilityTypeName: tosca.capabilities.network.Bindable
      capabilityName: ""
      nodeTypeName: SWI4
      nodeTemplateName: ""
      nodeTemplatePropertyConstraints: {}
      capabilityPropertyConstraints: {}
      relationship:
        description: This type represents a network association relationship between
          Port and Compute node types.
        types:
          tosca.relationships.DependsOn:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.7.2
              normative: "true"
          tosca.relationships.Root:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.7.1
              normative: "true"
          tosca.relationships.network.BindsTo:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 8.5.5
              normative: "true"
        properties: {}
        attributes:
          state:
            description: The state of the relationship instance.
            value: initial
          tosca_id:
            description: A unique identifier of the realized instance of a Relationship
              Template that derives from any TOSCA normative type.
            value: null
          tosca_name:
            description: This attribute reflects the name of the Relationship Template
              as defined in the TOSCA service template. This name is not unique to
              the realized instance model of corresponding deployed application as
              each template in the model can result in one or more instances (e.g.,
              scaled) when orchestrated to a provider environment.
            value: null
        interfaces:
          Configure:
            description: The lifecycle interfaces define the essential, normative
              operations that each TOSCA Relationship Types may support.
            types:
              tosca.interfaces.Root:
                metadata:
                  citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                  citation_location: 5.8.3
                  normative: "true"
              tosca.interfaces.relationship.Configure:
                metadata:
                  citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                  citation_location: 5.8.5
                  normative: "true"
            inputs: {}
            operations:
              add_source:
                description: Operation to notify the target node of a source node
                  which is now available via a relationship.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              add_target:
                description: Operation to notify the source node of a target node
                  being added via a relationship.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              post_configure_source:
                description: Operation to post-configure the source endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              post_configure_target:
                description: Operation to post-configure the target endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              pre_configure_source:
                description: Operation to pre-configure the source endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              pre_configure_target:
                description: Operation to pre-configure the target endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              remove_source:
                description: Operation to remove the source node.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              remove_target:
                description: Operation to remove a target node.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              target_changed:
                description: Operation to notify source some property or attribute
                  of the target changed
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
            notifications: {}
      path: topology_template.node_templates["CP8"].requirements[1]
    capabilities:
      feature:
        description: The Node capability indicates the base capabilities of a TOSCA
          Node Type.
        types:
          tosca.capabilities.Node:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.5.2
              normative: "true"
              role: feature
          tosca.capabilities.Root:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.5.1
              normative: "true"
        properties: {}
        attributes: {}
        minRelationshipCount: 0
        maxRelationshipCount: -1
    interfaces:
      Standard:
        description: This lifecycle interface defines the essential, normative operations
          that TOSCA nodes may support.
        types:
          tosca.interfaces.Root:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.8.3
              normative: "true"
          tosca.interfaces.node.lifecycle.Standard:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.8.4
              normative: "true"
        inputs: {}
        operations:
          configure:
            description: Standard lifecycle configure operation.
            implementation: ""
            dependencies: []
            inputs: {}
            timeout: -1
            host: ""
          create:
            description: Standard lifecycle create operation.
            implementation: ""
            dependencies: []
            inputs: {}
            timeout: -1
            host: ""
          delete:
            description: Standard lifecycle delete operation.
            implementation: ""
            dependencies: []
            inputs: {}
            timeout: -1
            host: ""
          start:
            description: Standard lifecycle start operation.
            implementation: ""
            dependencies: []
            inputs: {}
            timeout: -1
            host: ""
          stop:
            description: Standard lifecycle stop operation.
            implementation: ""
            dependencies: []
            inputs: {}
            timeout: -1
            host: ""
        notifications: {}
    artifacts: {}
  CP9:
    description: |-
      The TOSCA Port node represents a logical entity that associates between Compute and Network normative types.
      The Port node type effectively represents a single virtual NIC on the Compute node instance.
    types:
      tosca.nodes.Root:
        metadata:
          citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
          citation_location: 5.9.1
          normative: "true"
      tosca.nodes.network.Port:
        metadata:
          citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
          citation_location: 8.5.2
          normative: "true"
    directives: []
    properties:
      is_default:
        description: Set is_default=true to apply a default gateway route on the running
          compute instance to the associated network gateway. Only one port that is
          associated to single compute node can set as default=true.
        value: false
      order:
        description: 'The order of the NIC on the compute instance (e.g. eth2). Note:
          when binding more than one port to a single compute (aka multi vNICs) and
          ordering is desired, it is *mandatory* that all ports will be set with an
          order value and. The order values must represent a positive, arithmetic
          progression that starts with 0 (e.g. 0, 1, 2, ..., n).'
        value: 0
    attributes:
      ip_address:
        description: The IP address would be assigned to the associated compute instance.
        value: null
      state:
        description: The state of the node instance.
        value: initial
      tosca_id:
        description: A unique identifier of the realized instance of a Node Template
          that derives from any TOSCA normative type.
        value: null
      tosca_name:
        description: This attribute reflects the name of the Node Template as defined
          in the TOSCA service template. This name is not unique to the realized instance
          model of corresponding deployed application as each template in the model
          can result in one or more instances (e.g., scaled) when orchestrated to
          a provider environment.
        value: null
    requirements:
    - name: link
      capabilityTypeName: tosca.capabilities.network.Linkable
      capabilityName: ""
      nodeTypeName: ""
      nodeTemplateName: Link1
      nodeTemplatePropertyConstraints: {}
      capabilityPropertyConstraints: {}
      relationship:
        description: This relationship type represents an association relationship
          between Port and Network node types.
        types:
          tosca.relationships.DependsOn:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.7.2
              normative: "true"
          tosca.relationships.Root:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.7.1
              normative: "true"
          tosca.relationships.network.LinksTo:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 8.5.4
              normative: "true"
        properties: {}
        attributes:
          state:
            description: The state of the relationship instance.
            value: initial
          tosca_id:
            description: A unique identifier of the realized instance of a Relationship
              Template that derives from any TOSCA normative type.
            value: null
          tosca_name:
            description: This attribute reflects the name of the Relationship Template
              as defined in the TOSCA service template. This name is not unique to
              the realized instance model of corresponding deployed application as
              each template in the model can result in one or more instances (e.g.,
              scaled) when orchestrated to a provider environment.
            value: null
        interfaces:
          Configure:
            description: The lifecycle interfaces define the essential, normative
              operations that each TOSCA Relationship Types may support.
            types:
              tosca.interfaces.Root:
                metadata:
                  citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                  citation_location: 5.8.3
                  normative: "true"
              tosca.interfaces.relationship.Configure:
                metadata:
                  citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                  citation_location: 5.8.5
                  normative: "true"
            inputs: {}
            operations:
              add_source:
                description: Operation to notify the target node of a source node
                  which is now available via a relationship.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              add_target:
                description: Operation to notify the source node of a target node
                  being added via a relationship.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              post_configure_source:
                description: Operation to post-configure the source endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              post_configure_target:
                description: Operation to post-configure the target endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              pre_configure_source:
                description: Operation to pre-configure the source endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              pre_configure_target:
                description: Operation to pre-configure the target endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              remove_source:
                description: Operation to remove the source node.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              remove_target:
                description: Operation to remove a target node.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              target_changed:
                description: Operation to notify source some property or attribute
                  of the target changed
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
            notifications: {}
      path: topology_template.node_templates["CP9"].requirements[0]
    - name: binding
      capabilityTypeName: tosca.capabilities.network.Bindable
      capabilityName: ""
      nodeTypeName: SWI4
      nodeTemplateName: ""
      nodeTemplatePropertyConstraints: {}
      capabilityPropertyConstraints: {}
      relationship:
        description: This type represents a network association relationship between
          Port and Compute node types.
        types:
          tosca.relationships.DependsOn:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.7.2
              normative: "true"
          tosca.relationships.Root:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.7.1
              normative: "true"
          tosca.relationships.network.BindsTo:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 8.5.5
              normative: "true"
        properties: {}
        attributes:
          state:
            description: The state of the relationship instance.
            value: initial
          tosca_id:
            description: A unique identifier of the realized instance of a Relationship
              Template that derives from any TOSCA normative type.
            value: null
          tosca_name:
            description: This attribute reflects the name of the Relationship Template
              as defined in the TOSCA service template. This name is not unique to
              the realized instance model of corresponding deployed application as
              each template in the model can result in one or more instances (e.g.,
              scaled) when orchestrated to a provider environment.
            value: null
        interfaces:
          Configure:
            description: The lifecycle interfaces define the essential, normative
              operations that each TOSCA Relationship Types may support.
            types:
              tosca.interfaces.Root:
                metadata:
                  citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                  citation_location: 5.8.3
                  normative: "true"
              tosca.interfaces.relationship.Configure:
                metadata:
                  citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                  citation_location: 5.8.5
                  normative: "true"
            inputs: {}
            operations:
              add_source:
                description: Operation to notify the target node of a source node
                  which is now available via a relationship.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              add_target:
                description: Operation to notify the source node of a target node
                  being added via a relationship.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              post_configure_source:
                description: Operation to post-configure the source endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              post_configure_target:
                description: Operation to post-configure the target endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              pre_configure_source:
                description: Operation to pre-configure the source endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              pre_configure_target:
                description: Operation to pre-configure the target endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              remove_source:
                description: Operation to remove the source node.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              remove_target:
                description: Operation to remove a target node.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              target_changed:
                description: Operation to notify source some property or attribute
                  of the target changed
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
            notifications: {}
      path: topology_template.node_templates["CP9"].requirements[1]
    capabilities:
      feature:
        description: The Node capability indicates the base capabilities of a TOSCA
          Node Type.
        types:
          tosca.capabilities.Node:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.5.2
              normative: "true"
              role: feature
          tosca.capabilities.Root:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.5.1
              normative: "true"
        properties: {}
        attributes: {}
        minRelationshipCount: 0
        maxRelationshipCount: -1
    interfaces:
      Standard:
        description: This lifecycle interface defines the essential, normative operations
          that TOSCA nodes may support.
        types:
          tosca.interfaces.Root:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.8.3
              normative: "true"
          tosca.interfaces.node.lifecycle.Standard:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.8.4
              normative: "true"
        inputs: {}
        operations:
          configure:
            description: Standard lifecycle configure operation.
            implementation: ""
            dependencies: []
            inputs: {}
            timeout: -1
            host: ""
          create:
            description: Standard lifecycle create operation.
            implementation: ""
            dependencies: []
            inputs: {}
            timeout: -1
            host: ""
          delete:
            description: Standard lifecycle delete operation.
            implementation: ""
            dependencies: []
            inputs: {}
            timeout: -1
            host: ""
          start:
            description: Standard lifecycle start operation.
            implementation: ""
            dependencies: []
            inputs: {}
            timeout: -1
            host: ""
          stop:
            description: Standard lifecycle stop operation.
            implementation: ""
            dependencies: []
            inputs: {}
            timeout: -1
            host: ""
        notifications: {}
    artifacts: {}
  CP13:
    description: |-
      The TOSCA Port node represents a logical entity that associates between Compute and Network normative types.
      The Port node type effectively represents a single virtual NIC on the Compute node instance.
    types:
      tosca.nodes.Root:
        metadata:
          citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
          citation_location: 5.9.1
          normative: "true"
      tosca.nodes.network.Port:
        metadata:
          citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
          citation_location: 8.5.2
          normative: "true"
    directives: []
    properties:
      is_default:
        description: Set is_default=true to apply a default gateway route on the running
          compute instance to the associated network gateway. Only one port that is
          associated to single compute node can set as default=true.
        value: false
      order:
        description: 'The order of the NIC on the compute instance (e.g. eth2). Note:
          when binding more than one port to a single compute (aka multi vNICs) and
          ordering is desired, it is *mandatory* that all ports will be set with an
          order value and. The order values must represent a positive, arithmetic
          progression that starts with 0 (e.g. 0, 1, 2, ..., n).'
        value: 0
    attributes:
      ip_address:
        description: The IP address would be assigned to the associated compute instance.
        value: null
      state:
        description: The state of the node instance.
        value: initial
      tosca_id:
        description: A unique identifier of the realized instance of a Node Template
          that derives from any TOSCA normative type.
        value: null
      tosca_name:
        description: This attribute reflects the name of the Node Template as defined
          in the TOSCA service template. This name is not unique to the realized instance
          model of corresponding deployed application as each template in the model
          can result in one or more instances (e.g., scaled) when orchestrated to
          a provider environment.
        value: null
    requirements:
    - name: link
      capabilityTypeName: tosca.capabilities.network.Linkable
      capabilityName: ""
      nodeTypeName: ""
      nodeTemplateName: Link1
      nodeTemplatePropertyConstraints: {}
      capabilityPropertyConstraints: {}
      relationship:
        description: This relationship type represents an association relationship
          between Port and Network node types.
        types:
          tosca.relationships.DependsOn:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.7.2
              normative: "true"
          tosca.relationships.Root:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.7.1
              normative: "true"
          tosca.relationships.network.LinksTo:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 8.5.4
              normative: "true"
        properties: {}
        attributes:
          state:
            description: The state of the relationship instance.
            value: initial
          tosca_id:
            description: A unique identifier of the realized instance of a Relationship
              Template that derives from any TOSCA normative type.
            value: null
          tosca_name:
            description: This attribute reflects the name of the Relationship Template
              as defined in the TOSCA service template. This name is not unique to
              the realized instance model of corresponding deployed application as
              each template in the model can result in one or more instances (e.g.,
              scaled) when orchestrated to a provider environment.
            value: null
        interfaces:
          Configure:
            description: The lifecycle interfaces define the essential, normative
              operations that each TOSCA Relationship Types may support.
            types:
              tosca.interfaces.Root:
                metadata:
                  citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                  citation_location: 5.8.3
                  normative: "true"
              tosca.interfaces.relationship.Configure:
                metadata:
                  citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                  citation_location: 5.8.5
                  normative: "true"
            inputs: {}
            operations:
              add_source:
                description: Operation to notify the target node of a source node
                  which is now available via a relationship.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              add_target:
                description: Operation to notify the source node of a target node
                  being added via a relationship.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              post_configure_source:
                description: Operation to post-configure the source endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              post_configure_target:
                description: Operation to post-configure the target endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              pre_configure_source:
                description: Operation to pre-configure the source endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              pre_configure_target:
                description: Operation to pre-configure the target endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              remove_source:
                description: Operation to remove the source node.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              remove_target:
                description: Operation to remove a target node.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              target_changed:
                description: Operation to notify source some property or attribute
                  of the target changed
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
            notifications: {}
      path: topology_template.node_templates["CP13"].requirements[0]
    - name: binding
      capabilityTypeName: tosca.capabilities.network.Bindable
      capabilityName: ""
      nodeTypeName: SWI1
      nodeTemplateName: ""
      nodeTemplatePropertyConstraints: {}
      capabilityPropertyConstraints: {}
      relationship:
        description: This type represents a network association relationship between
          Port and Compute node types.
        types:
          tosca.relationships.DependsOn:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.7.2
              normative: "true"
          tosca.relationships.Root:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.7.1
              normative: "true"
          tosca.relationships.network.BindsTo:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 8.5.5
              normative: "true"
        properties: {}
        attributes:
          state:
            description: The state of the relationship instance.
            value: initial
          tosca_id:
            description: A unique identifier of the realized instance of a Relationship
              Template that derives from any TOSCA normative type.
            value: null
          tosca_name:
            description: This attribute reflects the name of the Relationship Template
              as defined in the TOSCA service template. This name is not unique to
              the realized instance model of corresponding deployed application as
              each template in the model can result in one or more instances (e.g.,
              scaled) when orchestrated to a provider environment.
            value: null
        interfaces:
          Configure:
            description: The lifecycle interfaces define the essential, normative
              operations that each TOSCA Relationship Types may support.
            types:
              tosca.interfaces.Root:
                metadata:
                  citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                  citation_location: 5.8.3
                  normative: "true"
              tosca.interfaces.relationship.Configure:
                metadata:
                  citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                  citation_location: 5.8.5
                  normative: "true"
            inputs: {}
            operations:
              add_source:
                description: Operation to notify the target node of a source node
                  which is now available via a relationship.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              add_target:
                description: Operation to notify the source node of a target node
                  being added via a relationship.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              post_configure_source:
                description: Operation to post-configure the source endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              post_configure_target:
                description: Operation to post-configure the target endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              pre_configure_source:
                description: Operation to pre-configure the source endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              pre_configure_target:
                description: Operation to pre-configure the target endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              remove_source:
                description: Operation to remove the source node.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              remove_target:
                description: Operation to remove a target node.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              target_changed:
                description: Operation to notify source some property or attribute
                  of the target changed
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
            notifications: {}
      path: topology_template.node_templates["CP13"].requirements[1]
    capabilities:
      feature:
        description: The Node capability indicates the base capabilities of a TOSCA
          Node Type.
        types:
          tosca.capabilities.Node:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.5.2
              normative: "true"
              role: feature
          tosca.capabilities.Root:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.5.1
              normative: "true"
        properties: {}
        attributes: {}
        minRelationshipCount: 0
        maxRelationshipCount: -1
    interfaces:
      Standard:
        description: This lifecycle interface defines the essential, normative operations
          that TOSCA nodes may support.
        types:
          tosca.interfaces.Root:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.8.3
              normative: "true"
          tosca.interfaces.node.lifecycle.Standard:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.8.4
              normative: "true"
        inputs: {}
        operations:
          configure:
            description: Standard lifecycle configure operation.
            implementation: ""
            dependencies: []
            inputs: {}
            timeout: -1
            host: ""
          create:
            description: Standard lifecycle create operation.
            implementation: ""
            dependencies: []
            inputs: {}
            timeout: -1
            host: ""
          delete:
            description: Standard lifecycle delete operation.
            implementation: ""
            dependencies: []
            inputs: {}
            timeout: -1
            host: ""
          start:
            description: Standard lifecycle start operation.
            implementation: ""
            dependencies: []
            inputs: {}
            timeout: -1
            host: ""
          stop:
            description: Standard lifecycle stop operation.
            implementation: ""
            dependencies: []
            inputs: {}
            timeout: -1
            host: ""
        notifications: {}
    artifacts: {}
  Link1:
    description: The TOSCA Network node represents a simple, logical network service.
    types:
      tosca.nodes.Root:
        metadata:
          citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
          citation_location: 5.9.1
          normative: "true"
      tosca.nodes.network.Network:
        metadata:
          citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
          citation_location: 8.5.1
          normative: "true"
    directives: []
    properties:
      cidr:
        description: The cidr block of the requested network.
        value: ""
      dhcp_enabled:
        description: Indicates the TOSCA container to create a virtual network instance
          with or without a DHCP service.
        value: true
      end_ip:
        description: The IP address to be used as the last one in a pool of addresses
          derived from the cidr block full IP range.
        value: ""
      ip_version:
        description: The IP version of the requested network.
        constraints:
        - functionCall:
            url: file:C:\Users\802052047\OneDrive - BT Plc\Documents\MDM\TOSCA\TOSCA_for_TMForum\TR255C\vFirewall.yml
            path: topology_template.node_templates["Link1"].properties["ip_version"]
            location: 447,9
            name: valid_values
            arguments:
            - value: 4
            - value: 6
        value: 4
      network_name:
        description: An Identifier that represents an existing Network instance in
          the underlying cloud infrastructure - OR - be used as the name of the new
          created network.
        value: ""
      start_ip:
        description: The IP address to be used as the 1st one in a pool of addresses
          derived from the cidr block full IP range.
        value: ""
    attributes:
      segmentation_id:
        description: 'The actual segmentation_id that is been assigned to the network
          by the underlying cloud infrastructure. '
        value: null
      state:
        description: The state of the node instance.
        value: initial
      tosca_id:
        description: A unique identifier of the realized instance of a Node Template
          that derives from any TOSCA normative type.
        value: null
      tosca_name:
        description: This attribute reflects the name of the Node Template as defined
          in the TOSCA service template. This name is not unique to the realized instance
          model of corresponding deployed application as each template in the model
          can result in one or more instances (e.g., scaled) when orchestrated to
          a provider environment.
        value: null
    requirements: []
    capabilities:
      feature:
        description: The Node capability indicates the base capabilities of a TOSCA
          Node Type.
        types:
          tosca.capabilities.Node:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.5.2
              normative: "true"
              role: feature
          tosca.capabilities.Root:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.5.1
              normative: "true"
        properties: {}
        attributes: {}
        minRelationshipCount: 0
        maxRelationshipCount: -1
      link:
        description: A node type that includes the Linkable capability indicates that
          it can be pointed by tosca.relationships.network.LinksTo relationship type.
        types:
          tosca.capabilities.Node:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.5.2
              normative: "true"
              role: feature
          tosca.capabilities.Root:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.5.1
              normative: "true"
          tosca.capabilities.network.Linkable:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 8.5.3
              normative: "true"
        properties: {}
        attributes: {}
        minRelationshipCount: 0
        maxRelationshipCount: -1
    interfaces:
      Standard:
        description: This lifecycle interface defines the essential, normative operations
          that TOSCA nodes may support.
        types:
          tosca.interfaces.Root:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.8.3
              normative: "true"
          tosca.interfaces.node.lifecycle.Standard:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.8.4
              normative: "true"
        inputs: {}
        operations:
          configure:
            description: Standard lifecycle configure operation.
            implementation: ""
            dependencies: []
            inputs: {}
            timeout: -1
            host: ""
          create:
            description: Standard lifecycle create operation.
            implementation: ""
            dependencies: []
            inputs: {}
            timeout: -1
            host: ""
          delete:
            description: Standard lifecycle delete operation.
            implementation: ""
            dependencies: []
            inputs: {}
            timeout: -1
            host: ""
          start:
            description: Standard lifecycle start operation.
            implementation: ""
            dependencies: []
            inputs: {}
            timeout: -1
            host: ""
          stop:
            description: Standard lifecycle stop operation.
            implementation: ""
            dependencies: []
            inputs: {}
            timeout: -1
            host: ""
        notifications: {}
    artifacts: {}
  my_SWI1_linux:
    description: A software component with ports
    types:
      SWI1:
        metadata: {}
      SWI1_linux:
        metadata: {}
      tosca.nodes.Root:
        metadata:
          citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
          citation_location: 5.9.1
          normative: "true"
      tosca.nodes.SoftwareComponent:
        metadata:
          citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
          citation_location: 5.9.4
          normative: "true"
      tosca.nodes.SoftwareComponent.networked:
        metadata: {}
    directives: []
    properties:
      admin_credential:
        description: The optional credential that can be used to authenticate to the
          software component.
        map:
        - key:
            value: token
          description: The required token used as a credential for authorization or
            access to a networked resource.
          value: mypassword
        - key:
            value: token_type
          description: The required token type.
          value: password
        - key:
            value: user
          description: The optional user (name or ID) used for non-token based credentials.
          value: myusername
      component_version:
        description: The optional software component's version.
        value:
          $string: "1.0"
          $originalString: "1.0"
          major: 1
          minor: 0
          fix: 0
          qualifier: ""
          build: 0
    attributes:
      state:
        description: The state of the node instance.
        value: initial
      tosca_id:
        description: A unique identifier of the realized instance of a Node Template
          that derives from any TOSCA normative type.
        value: null
      tosca_name:
        description: This attribute reflects the name of the Node Template as defined
          in the TOSCA service template. This name is not unique to the realized instance
          model of corresponding deployed application as each template in the model
          can result in one or more instances (e.g., scaled) when orchestrated to
          a provider environment.
        value: null
    requirements:
    - name: host
      capabilityTypeName: tosca.capabilities.Compute
      capabilityName: ""
      nodeTypeName: tosca.nodes.Compute
      nodeTemplateName: ""
      nodeTemplatePropertyConstraints:
        disk_size:
        - functionCall:
            url: file:C:\Users\802052047\OneDrive - BT Plc\Documents\MDM\TOSCA\TOSCA_for_TMForum\TR255C\vFirewall.yml
            path: topology_template.node_templates["my_SWI1_linux"].requirements[0].relationship.interfaces["tosca_name"]
            location: 257,11
            name: greater_or_equal
            arguments:
            - value: 10 GB
        mem_size:
        - functionCall:
            url: file:C:\Users\802052047\OneDrive - BT Plc\Documents\MDM\TOSCA\TOSCA_for_TMForum\TR255C\vFirewall.yml
            path: topology_template.node_templates["my_SWI1_linux"].requirements[0].relationship.interfaces["tosca_name"]
            location: 257,11
            name: greater_or_equal
            arguments:
            - value: 4 GB
        num_cpus:
        - functionCall:
            url: file:C:\Users\802052047\OneDrive - BT Plc\Documents\MDM\TOSCA\TOSCA_for_TMForum\TR255C\vFirewall.yml
            path: topology_template.node_templates["my_SWI1_linux"].requirements[0].relationship.interfaces["tosca_name"]
            location: 257,11
            name: greater_or_equal
            arguments:
            - value: 2
      capabilityPropertyConstraints:
        os:
          type:
          - functionCall:
              url: file:C:\Users\802052047\OneDrive - BT Plc\Documents\MDM\TOSCA\TOSCA_for_TMForum\TR255C\vFirewall.yml
              path: topology_template.node_templates["my_SWI1_linux"].requirements[0].node_filter.capabilities["os"].properties["type"]
              location: 257,11
              name: equal
              arguments:
              - map:
                - key:
                    value: operating_system
                  value: null
                - key:
                    value: get_attribute
                  value: my_virtualFirewall
      relationship:
        description: This type represents a hosting relationship between two nodes.
        types:
          tosca.relationships.HostedOn:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.7.3
              normative: "true"
              role: host
          tosca.relationships.Root:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.7.1
              normative: "true"
        properties: {}
        attributes:
          state:
            description: The state of the relationship instance.
            value: initial
          tosca_id:
            description: A unique identifier of the realized instance of a Relationship
              Template that derives from any TOSCA normative type.
            value: null
          tosca_name:
            description: This attribute reflects the name of the Relationship Template
              as defined in the TOSCA service template. This name is not unique to
              the realized instance model of corresponding deployed application as
              each template in the model can result in one or more instances (e.g.,
              scaled) when orchestrated to a provider environment.
            value: null
        interfaces:
          Configure:
            description: The lifecycle interfaces define the essential, normative
              operations that each TOSCA Relationship Types may support.
            types:
              tosca.interfaces.Root:
                metadata:
                  citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                  citation_location: 5.8.3
                  normative: "true"
              tosca.interfaces.relationship.Configure:
                metadata:
                  citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                  citation_location: 5.8.5
                  normative: "true"
            inputs: {}
            operations:
              add_source:
                description: Operation to notify the target node of a source node
                  which is now available via a relationship.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              add_target:
                description: Operation to notify the source node of a target node
                  being added via a relationship.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              post_configure_source:
                description: Operation to post-configure the source endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              post_configure_target:
                description: Operation to post-configure the target endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              pre_configure_source:
                description: Operation to pre-configure the source endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              pre_configure_target:
                description: Operation to pre-configure the target endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              remove_source:
                description: Operation to remove the source node.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              remove_target:
                description: Operation to remove a target node.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              target_changed:
                description: Operation to notify source some property or attribute
                  of the target changed
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
            notifications: {}
      path: topology_template.node_templates["my_SWI1_linux"].requirements[0]
    - name: port
      capabilityTypeName: tosca.capabilities.network.Bindable
      capabilityName: ""
      nodeTypeName: tosca.nodes.network.Port
      nodeTemplateName: ""
      nodeTemplatePropertyConstraints: {}
      capabilityPropertyConstraints: {}
      relationship:
        description: This type represents a network association relationship between
          Port and Compute node types.
        types:
          tosca.relationships.DependsOn:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.7.2
              normative: "true"
          tosca.relationships.Root:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.7.1
              normative: "true"
          tosca.relationships.network.BindsTo:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 8.5.5
              normative: "true"
        properties: {}
        attributes:
          state:
            description: The state of the relationship instance.
            value: initial
          tosca_id:
            description: A unique identifier of the realized instance of a Relationship
              Template that derives from any TOSCA normative type.
            value: null
          tosca_name:
            description: This attribute reflects the name of the Relationship Template
              as defined in the TOSCA service template. This name is not unique to
              the realized instance model of corresponding deployed application as
              each template in the model can result in one or more instances (e.g.,
              scaled) when orchestrated to a provider environment.
            value: null
        interfaces:
          Configure:
            description: The lifecycle interfaces define the essential, normative
              operations that each TOSCA Relationship Types may support.
            types:
              tosca.interfaces.Root:
                metadata:
                  citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                  citation_location: 5.8.3
                  normative: "true"
              tosca.interfaces.relationship.Configure:
                metadata:
                  citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                  citation_location: 5.8.5
                  normative: "true"
            inputs: {}
            operations:
              add_source:
                description: Operation to notify the target node of a source node
                  which is now available via a relationship.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              add_target:
                description: Operation to notify the source node of a target node
                  being added via a relationship.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              post_configure_source:
                description: Operation to post-configure the source endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              post_configure_target:
                description: Operation to post-configure the target endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              pre_configure_source:
                description: Operation to pre-configure the source endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              pre_configure_target:
                description: Operation to pre-configure the target endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              remove_source:
                description: Operation to remove the source node.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              remove_target:
                description: Operation to remove a target node.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              target_changed:
                description: Operation to notify source some property or attribute
                  of the target changed
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
            notifications: {}
      path: topology_template.node_templates["my_SWI1_linux"].requirements[1]
    - name: port
      capabilityTypeName: tosca.capabilities.network.Bindable
      capabilityName: ""
      nodeTypeName: tosca.nodes.network.Port
      nodeTemplateName: ""
      nodeTemplatePropertyConstraints: {}
      capabilityPropertyConstraints: {}
      relationship:
        description: This type represents a network association relationship between
          Port and Compute node types.
        types:
          tosca.relationships.DependsOn:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.7.2
              normative: "true"
          tosca.relationships.Root:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.7.1
              normative: "true"
          tosca.relationships.network.BindsTo:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 8.5.5
              normative: "true"
        properties: {}
        attributes:
          state:
            description: The state of the relationship instance.
            value: initial
          tosca_id:
            description: A unique identifier of the realized instance of a Relationship
              Template that derives from any TOSCA normative type.
            value: null
          tosca_name:
            description: This attribute reflects the name of the Relationship Template
              as defined in the TOSCA service template. This name is not unique to
              the realized instance model of corresponding deployed application as
              each template in the model can result in one or more instances (e.g.,
              scaled) when orchestrated to a provider environment.
            value: null
        interfaces:
          Configure:
            description: The lifecycle interfaces define the essential, normative
              operations that each TOSCA Relationship Types may support.
            types:
              tosca.interfaces.Root:
                metadata:
                  citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                  citation_location: 5.8.3
                  normative: "true"
              tosca.interfaces.relationship.Configure:
                metadata:
                  citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                  citation_location: 5.8.5
                  normative: "true"
            inputs: {}
            operations:
              add_source:
                description: Operation to notify the target node of a source node
                  which is now available via a relationship.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              add_target:
                description: Operation to notify the source node of a target node
                  being added via a relationship.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              post_configure_source:
                description: Operation to post-configure the source endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              post_configure_target:
                description: Operation to post-configure the target endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              pre_configure_source:
                description: Operation to pre-configure the source endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              pre_configure_target:
                description: Operation to pre-configure the target endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              remove_source:
                description: Operation to remove the source node.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              remove_target:
                description: Operation to remove a target node.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              target_changed:
                description: Operation to notify source some property or attribute
                  of the target changed
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
            notifications: {}
      path: topology_template.node_templates["my_SWI1_linux"].requirements[2]
    - name: CP2
      capabilityTypeName: tosca.capabilities.Node
      capabilityName: ""
      nodeTypeName: tosca.nodes.network.Port
      nodeTemplateName: ""
      nodeTemplatePropertyConstraints: {}
      capabilityPropertyConstraints: {}
      relationship:
        description: This type represents a general dependency relationship between
          two nodes.
        types:
          tosca.relationships.DependsOn:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.7.2
              normative: "true"
          tosca.relationships.Root:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.7.1
              normative: "true"
        properties: {}
        attributes:
          state:
            description: The state of the relationship instance.
            value: initial
          tosca_id:
            description: A unique identifier of the realized instance of a Relationship
              Template that derives from any TOSCA normative type.
            value: null
          tosca_name:
            description: This attribute reflects the name of the Relationship Template
              as defined in the TOSCA service template. This name is not unique to
              the realized instance model of corresponding deployed application as
              each template in the model can result in one or more instances (e.g.,
              scaled) when orchestrated to a provider environment.
            value: null
        interfaces:
          Configure:
            description: The lifecycle interfaces define the essential, normative
              operations that each TOSCA Relationship Types may support.
            types:
              tosca.interfaces.Root:
                metadata:
                  citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                  citation_location: 5.8.3
                  normative: "true"
              tosca.interfaces.relationship.Configure:
                metadata:
                  citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                  citation_location: 5.8.5
                  normative: "true"
            inputs: {}
            operations:
              add_source:
                description: Operation to notify the target node of a source node
                  which is now available via a relationship.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              add_target:
                description: Operation to notify the source node of a target node
                  being added via a relationship.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              post_configure_source:
                description: Operation to post-configure the source endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              post_configure_target:
                description: Operation to post-configure the target endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              pre_configure_source:
                description: Operation to pre-configure the source endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              pre_configure_target:
                description: Operation to pre-configure the target endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              remove_source:
                description: Operation to remove the source node.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              remove_target:
                description: Operation to remove a target node.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              target_changed:
                description: Operation to notify source some property or attribute
                  of the target changed
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
            notifications: {}
      path: topology_template.node_templates["my_SWI1_linux"].requirements[3]
    - name: CP14
      capabilityTypeName: tosca.capabilities.Node
      capabilityName: ""
      nodeTypeName: tosca.nodes.network.Port
      nodeTemplateName: ""
      nodeTemplatePropertyConstraints: {}
      capabilityPropertyConstraints: {}
      relationship:
        description: This type represents a general dependency relationship between
          two nodes.
        types:
          tosca.relationships.DependsOn:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.7.2
              normative: "true"
          tosca.relationships.Root:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.7.1
              normative: "true"
        properties: {}
        attributes:
          state:
            description: The state of the relationship instance.
            value: initial
          tosca_id:
            description: A unique identifier of the realized instance of a Relationship
              Template that derives from any TOSCA normative type.
            value: null
          tosca_name:
            description: This attribute reflects the name of the Relationship Template
              as defined in the TOSCA service template. This name is not unique to
              the realized instance model of corresponding deployed application as
              each template in the model can result in one or more instances (e.g.,
              scaled) when orchestrated to a provider environment.
            value: null
        interfaces:
          Configure:
            description: The lifecycle interfaces define the essential, normative
              operations that each TOSCA Relationship Types may support.
            types:
              tosca.interfaces.Root:
                metadata:
                  citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                  citation_location: 5.8.3
                  normative: "true"
              tosca.interfaces.relationship.Configure:
                metadata:
                  citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                  citation_location: 5.8.5
                  normative: "true"
            inputs: {}
            operations:
              add_source:
                description: Operation to notify the target node of a source node
                  which is now available via a relationship.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              add_target:
                description: Operation to notify the source node of a target node
                  being added via a relationship.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              post_configure_source:
                description: Operation to post-configure the source endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              post_configure_target:
                description: Operation to post-configure the target endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              pre_configure_source:
                description: Operation to pre-configure the source endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              pre_configure_target:
                description: Operation to pre-configure the target endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              remove_source:
                description: Operation to remove the source node.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              remove_target:
                description: Operation to remove a target node.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              target_changed:
                description: Operation to notify source some property or attribute
                  of the target changed
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
            notifications: {}
      path: topology_template.node_templates["my_SWI1_linux"].requirements[4]
    capabilities:
      feature:
        description: The Node capability indicates the base capabilities of a TOSCA
          Node Type.
        types:
          tosca.capabilities.Node:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.5.2
              normative: "true"
              role: feature
          tosca.capabilities.Root:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.5.1
              normative: "true"
        properties: {}
        attributes: {}
        minRelationshipCount: 0
        maxRelationshipCount: -1
    interfaces:
      Standard:
        description: This lifecycle interface defines the essential, normative operations
          that TOSCA nodes may support.
        types:
          tosca.interfaces.Root:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.8.3
              normative: "true"
          tosca.interfaces.node.lifecycle.Standard:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.8.4
              normative: "true"
        inputs: {}
        operations:
          configure:
            description: Standard lifecycle configure operation.
            implementation: ""
            dependencies: []
            inputs: {}
            timeout: -1
            host: ""
          create:
            description: Standard lifecycle create operation.
            implementation: ""
            dependencies: []
            inputs: {}
            timeout: -1
            host: ""
          delete:
            description: Standard lifecycle delete operation.
            implementation: ""
            dependencies: []
            inputs: {}
            timeout: -1
            host: ""
          start:
            description: Standard lifecycle start operation.
            implementation: ""
            dependencies: []
            inputs: {}
            timeout: -1
            host: ""
          stop:
            description: Standard lifecycle stop operation.
            implementation: ""
            dependencies: []
            inputs: {}
            timeout: -1
            host: ""
        notifications: {}
    artifacts:
      vm_image:
        description: QCOW2 format
        types:
          tosca.artifacts.Deployment:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.4.3.1
              normative: "true"
          tosca.artifacts.Deployment.Image.VM:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.4.3.4
              normative: "true"
          tosca.artifacts.Deployment.Image.VM.QCOW2:
            metadata: {}
          tosca.artifacts.Root:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.4.1
              normative: "true"
        properties: {}
        sourcePath: images/fw-core-fedora-18-x86_64.qcow2
        targetPath: ""
  my_SWI1_windows:
    description: A software component with ports
    types:
      SWI1:
        metadata: {}
      SWI1_windows:
        metadata: {}
      tosca.nodes.Root:
        metadata:
          citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
          citation_location: 5.9.1
          normative: "true"
      tosca.nodes.SoftwareComponent:
        metadata:
          citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
          citation_location: 5.9.4
          normative: "true"
      tosca.nodes.SoftwareComponent.networked:
        metadata: {}
    directives: []
    properties:
      admin_credential:
        description: The optional credential that can be used to authenticate to the
          software component.
        map:
        - key:
            value: user
          description: The optional user (name or ID) used for non-token based credentials.
          value: myusername
        - key:
            value: token
          description: The required token used as a credential for authorization or
            access to a networked resource.
          value: mypassword
        - key:
            value: token_type
          description: The required token type.
          value: password
      component_version:
        description: The optional software component's version.
        value:
          $string: "1.0"
          $originalString: "1.0"
          major: 1
          minor: 0
          fix: 0
          qualifier: ""
          build: 0
    attributes:
      state:
        description: The state of the node instance.
        value: initial
      tosca_id:
        description: A unique identifier of the realized instance of a Node Template
          that derives from any TOSCA normative type.
        value: null
      tosca_name:
        description: This attribute reflects the name of the Node Template as defined
          in the TOSCA service template. This name is not unique to the realized instance
          model of corresponding deployed application as each template in the model
          can result in one or more instances (e.g., scaled) when orchestrated to
          a provider environment.
        value: null
    requirements:
    - name: host
      capabilityTypeName: tosca.capabilities.Compute
      capabilityName: ""
      nodeTypeName: tosca.nodes.Compute
      nodeTemplateName: ""
      nodeTemplatePropertyConstraints:
        disk_size:
        - functionCall:
            url: file:C:\Users\802052047\OneDrive - BT Plc\Documents\MDM\TOSCA\TOSCA_for_TMForum\TR255C\vFirewall.yml
            path: topology_template.node_templates["my_SWI1_windows"].requirements[0].relationship.interfaces["tosca_name"]
            location: 286,11
            name: greater_or_equal
            arguments:
            - value: 100 GB
        mem_size:
        - functionCall:
            url: file:C:\Users\802052047\OneDrive - BT Plc\Documents\MDM\TOSCA\TOSCA_for_TMForum\TR255C\vFirewall.yml
            path: topology_template.node_templates["my_SWI1_windows"].requirements[0].relationship.interfaces["tosca_name"]
            location: 286,11
            name: greater_or_equal
            arguments:
            - value: 40 GB
        num_cpus:
        - functionCall:
            url: file:C:\Users\802052047\OneDrive - BT Plc\Documents\MDM\TOSCA\TOSCA_for_TMForum\TR255C\vFirewall.yml
            path: topology_template.node_templates["my_SWI1_windows"].requirements[0].relationship.interfaces["tosca_name"]
            location: 286,11
            name: greater_or_equal
            arguments:
            - value: 4
      capabilityPropertyConstraints:
        os:
          type:
          - functionCall:
              url: file:C:\Users\802052047\OneDrive - BT Plc\Documents\MDM\TOSCA\TOSCA_for_TMForum\TR255C\vFirewall.yml
              path: topology_template.node_templates["my_SWI1_windows"].requirements[0].node_filter.capabilities["os"].properties["type"]
              location: 286,11
              name: equal
              arguments:
              - map:
                - key:
                    value: get_attribute
                  value: my_virtualFirewall
                - key:
                    value: operating_system
                  value: null
      relationship:
        description: This type represents a hosting relationship between two nodes.
        types:
          tosca.relationships.HostedOn:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.7.3
              normative: "true"
              role: host
          tosca.relationships.Root:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.7.1
              normative: "true"
        properties: {}
        attributes:
          state:
            description: The state of the relationship instance.
            value: initial
          tosca_id:
            description: A unique identifier of the realized instance of a Relationship
              Template that derives from any TOSCA normative type.
            value: null
          tosca_name:
            description: This attribute reflects the name of the Relationship Template
              as defined in the TOSCA service template. This name is not unique to
              the realized instance model of corresponding deployed application as
              each template in the model can result in one or more instances (e.g.,
              scaled) when orchestrated to a provider environment.
            value: null
        interfaces:
          Configure:
            description: The lifecycle interfaces define the essential, normative
              operations that each TOSCA Relationship Types may support.
            types:
              tosca.interfaces.Root:
                metadata:
                  citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                  citation_location: 5.8.3
                  normative: "true"
              tosca.interfaces.relationship.Configure:
                metadata:
                  citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                  citation_location: 5.8.5
                  normative: "true"
            inputs: {}
            operations:
              add_source:
                description: Operation to notify the target node of a source node
                  which is now available via a relationship.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              add_target:
                description: Operation to notify the source node of a target node
                  being added via a relationship.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              post_configure_source:
                description: Operation to post-configure the source endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              post_configure_target:
                description: Operation to post-configure the target endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              pre_configure_source:
                description: Operation to pre-configure the source endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              pre_configure_target:
                description: Operation to pre-configure the target endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              remove_source:
                description: Operation to remove the source node.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              remove_target:
                description: Operation to remove a target node.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              target_changed:
                description: Operation to notify source some property or attribute
                  of the target changed
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
            notifications: {}
      path: topology_template.node_templates["my_SWI1_windows"].requirements[0]
    - name: port
      capabilityTypeName: tosca.capabilities.network.Bindable
      capabilityName: ""
      nodeTypeName: tosca.nodes.network.Port
      nodeTemplateName: ""
      nodeTemplatePropertyConstraints: {}
      capabilityPropertyConstraints: {}
      relationship:
        description: This type represents a network association relationship between
          Port and Compute node types.
        types:
          tosca.relationships.DependsOn:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.7.2
              normative: "true"
          tosca.relationships.Root:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.7.1
              normative: "true"
          tosca.relationships.network.BindsTo:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 8.5.5
              normative: "true"
        properties: {}
        attributes:
          state:
            description: The state of the relationship instance.
            value: initial
          tosca_id:
            description: A unique identifier of the realized instance of a Relationship
              Template that derives from any TOSCA normative type.
            value: null
          tosca_name:
            description: This attribute reflects the name of the Relationship Template
              as defined in the TOSCA service template. This name is not unique to
              the realized instance model of corresponding deployed application as
              each template in the model can result in one or more instances (e.g.,
              scaled) when orchestrated to a provider environment.
            value: null
        interfaces:
          Configure:
            description: The lifecycle interfaces define the essential, normative
              operations that each TOSCA Relationship Types may support.
            types:
              tosca.interfaces.Root:
                metadata:
                  citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                  citation_location: 5.8.3
                  normative: "true"
              tosca.interfaces.relationship.Configure:
                metadata:
                  citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                  citation_location: 5.8.5
                  normative: "true"
            inputs: {}
            operations:
              add_source:
                description: Operation to notify the target node of a source node
                  which is now available via a relationship.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              add_target:
                description: Operation to notify the source node of a target node
                  being added via a relationship.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              post_configure_source:
                description: Operation to post-configure the source endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              post_configure_target:
                description: Operation to post-configure the target endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              pre_configure_source:
                description: Operation to pre-configure the source endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              pre_configure_target:
                description: Operation to pre-configure the target endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              remove_source:
                description: Operation to remove the source node.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              remove_target:
                description: Operation to remove a target node.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              target_changed:
                description: Operation to notify source some property or attribute
                  of the target changed
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
            notifications: {}
      path: topology_template.node_templates["my_SWI1_windows"].requirements[1]
    - name: port
      capabilityTypeName: tosca.capabilities.network.Bindable
      capabilityName: ""
      nodeTypeName: tosca.nodes.network.Port
      nodeTemplateName: ""
      nodeTemplatePropertyConstraints: {}
      capabilityPropertyConstraints: {}
      relationship:
        description: This type represents a network association relationship between
          Port and Compute node types.
        types:
          tosca.relationships.DependsOn:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.7.2
              normative: "true"
          tosca.relationships.Root:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.7.1
              normative: "true"
          tosca.relationships.network.BindsTo:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 8.5.5
              normative: "true"
        properties: {}
        attributes:
          state:
            description: The state of the relationship instance.
            value: initial
          tosca_id:
            description: A unique identifier of the realized instance of a Relationship
              Template that derives from any TOSCA normative type.
            value: null
          tosca_name:
            description: This attribute reflects the name of the Relationship Template
              as defined in the TOSCA service template. This name is not unique to
              the realized instance model of corresponding deployed application as
              each template in the model can result in one or more instances (e.g.,
              scaled) when orchestrated to a provider environment.
            value: null
        interfaces:
          Configure:
            description: The lifecycle interfaces define the essential, normative
              operations that each TOSCA Relationship Types may support.
            types:
              tosca.interfaces.Root:
                metadata:
                  citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                  citation_location: 5.8.3
                  normative: "true"
              tosca.interfaces.relationship.Configure:
                metadata:
                  citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                  citation_location: 5.8.5
                  normative: "true"
            inputs: {}
            operations:
              add_source:
                description: Operation to notify the target node of a source node
                  which is now available via a relationship.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              add_target:
                description: Operation to notify the source node of a target node
                  being added via a relationship.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              post_configure_source:
                description: Operation to post-configure the source endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              post_configure_target:
                description: Operation to post-configure the target endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              pre_configure_source:
                description: Operation to pre-configure the source endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              pre_configure_target:
                description: Operation to pre-configure the target endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              remove_source:
                description: Operation to remove the source node.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              remove_target:
                description: Operation to remove a target node.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              target_changed:
                description: Operation to notify source some property or attribute
                  of the target changed
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
            notifications: {}
      path: topology_template.node_templates["my_SWI1_windows"].requirements[2]
    - name: CP2
      capabilityTypeName: tosca.capabilities.Node
      capabilityName: ""
      nodeTypeName: tosca.nodes.network.Port
      nodeTemplateName: ""
      nodeTemplatePropertyConstraints: {}
      capabilityPropertyConstraints: {}
      relationship:
        description: This type represents a general dependency relationship between
          two nodes.
        types:
          tosca.relationships.DependsOn:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.7.2
              normative: "true"
          tosca.relationships.Root:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.7.1
              normative: "true"
        properties: {}
        attributes:
          state:
            description: The state of the relationship instance.
            value: initial
          tosca_id:
            description: A unique identifier of the realized instance of a Relationship
              Template that derives from any TOSCA normative type.
            value: null
          tosca_name:
            description: This attribute reflects the name of the Relationship Template
              as defined in the TOSCA service template. This name is not unique to
              the realized instance model of corresponding deployed application as
              each template in the model can result in one or more instances (e.g.,
              scaled) when orchestrated to a provider environment.
            value: null
        interfaces:
          Configure:
            description: The lifecycle interfaces define the essential, normative
              operations that each TOSCA Relationship Types may support.
            types:
              tosca.interfaces.Root:
                metadata:
                  citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                  citation_location: 5.8.3
                  normative: "true"
              tosca.interfaces.relationship.Configure:
                metadata:
                  citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                  citation_location: 5.8.5
                  normative: "true"
            inputs: {}
            operations:
              add_source:
                description: Operation to notify the target node of a source node
                  which is now available via a relationship.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              add_target:
                description: Operation to notify the source node of a target node
                  being added via a relationship.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              post_configure_source:
                description: Operation to post-configure the source endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              post_configure_target:
                description: Operation to post-configure the target endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              pre_configure_source:
                description: Operation to pre-configure the source endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              pre_configure_target:
                description: Operation to pre-configure the target endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              remove_source:
                description: Operation to remove the source node.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              remove_target:
                description: Operation to remove a target node.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              target_changed:
                description: Operation to notify source some property or attribute
                  of the target changed
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
            notifications: {}
      path: topology_template.node_templates["my_SWI1_windows"].requirements[3]
    - name: CP14
      capabilityTypeName: tosca.capabilities.Node
      capabilityName: ""
      nodeTypeName: tosca.nodes.network.Port
      nodeTemplateName: ""
      nodeTemplatePropertyConstraints: {}
      capabilityPropertyConstraints: {}
      relationship:
        description: This type represents a general dependency relationship between
          two nodes.
        types:
          tosca.relationships.DependsOn:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.7.2
              normative: "true"
          tosca.relationships.Root:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.7.1
              normative: "true"
        properties: {}
        attributes:
          state:
            description: The state of the relationship instance.
            value: initial
          tosca_id:
            description: A unique identifier of the realized instance of a Relationship
              Template that derives from any TOSCA normative type.
            value: null
          tosca_name:
            description: This attribute reflects the name of the Relationship Template
              as defined in the TOSCA service template. This name is not unique to
              the realized instance model of corresponding deployed application as
              each template in the model can result in one or more instances (e.g.,
              scaled) when orchestrated to a provider environment.
            value: null
        interfaces:
          Configure:
            description: The lifecycle interfaces define the essential, normative
              operations that each TOSCA Relationship Types may support.
            types:
              tosca.interfaces.Root:
                metadata:
                  citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                  citation_location: 5.8.3
                  normative: "true"
              tosca.interfaces.relationship.Configure:
                metadata:
                  citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                  citation_location: 5.8.5
                  normative: "true"
            inputs: {}
            operations:
              add_source:
                description: Operation to notify the target node of a source node
                  which is now available via a relationship.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              add_target:
                description: Operation to notify the source node of a target node
                  being added via a relationship.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              post_configure_source:
                description: Operation to post-configure the source endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              post_configure_target:
                description: Operation to post-configure the target endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              pre_configure_source:
                description: Operation to pre-configure the source endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              pre_configure_target:
                description: Operation to pre-configure the target endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              remove_source:
                description: Operation to remove the source node.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              remove_target:
                description: Operation to remove a target node.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              target_changed:
                description: Operation to notify source some property or attribute
                  of the target changed
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
            notifications: {}
      path: topology_template.node_templates["my_SWI1_windows"].requirements[4]
    capabilities:
      feature:
        description: The Node capability indicates the base capabilities of a TOSCA
          Node Type.
        types:
          tosca.capabilities.Node:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.5.2
              normative: "true"
              role: feature
          tosca.capabilities.Root:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.5.1
              normative: "true"
        properties: {}
        attributes: {}
        minRelationshipCount: 0
        maxRelationshipCount: -1
    interfaces:
      Standard:
        description: This lifecycle interface defines the essential, normative operations
          that TOSCA nodes may support.
        types:
          tosca.interfaces.Root:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.8.3
              normative: "true"
          tosca.interfaces.node.lifecycle.Standard:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.8.4
              normative: "true"
        inputs: {}
        operations:
          configure:
            description: Standard lifecycle configure operation.
            implementation: ""
            dependencies: []
            inputs: {}
            timeout: -1
            host: ""
          create:
            description: Standard lifecycle create operation.
            implementation: ""
            dependencies: []
            inputs: {}
            timeout: -1
            host: ""
          delete:
            description: Standard lifecycle delete operation.
            implementation: ""
            dependencies: []
            inputs: {}
            timeout: -1
            host: ""
          start:
            description: Standard lifecycle start operation.
            implementation: ""
            dependencies: []
            inputs: {}
            timeout: -1
            host: ""
          stop:
            description: Standard lifecycle stop operation.
            implementation: ""
            dependencies: []
            inputs: {}
            timeout: -1
            host: ""
        notifications: {}
    artifacts:
      vm_image:
        description: QCOW2 format
        types:
          tosca.artifacts.Deployment:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.4.3.1
              normative: "true"
          tosca.artifacts.Deployment.Image.VM:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.4.3.4
              normative: "true"
          tosca.artifacts.Deployment.Image.VM.QCOW2:
            metadata: {}
          tosca.artifacts.Root:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.4.1
              normative: "true"
        properties: {}
        sourcePath: images/fw-core-windows-10-x86_64.qcow2
        targetPath: ""
  my_SWI2_linux:
    description: A software component with ports
    types:
      SWI2:
        metadata: {}
      SWI2_linux:
        metadata: {}
      tosca.nodes.Root:
        metadata:
          citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
          citation_location: 5.9.1
          normative: "true"
      tosca.nodes.SoftwareComponent:
        metadata:
          citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
          citation_location: 5.9.4
          normative: "true"
      tosca.nodes.SoftwareComponent.networked:
        metadata: {}
    directives: []
    properties:
      admin_credential:
        description: The optional credential that can be used to authenticate to the
          software component.
        map:
        - key:
            value: user
          description: The optional user (name or ID) used for non-token based credentials.
          value: myusername
        - key:
            value: token
          description: The required token used as a credential for authorization or
            access to a networked resource.
          value: mypassword
        - key:
            value: token_type
          description: The required token type.
          value: password
      component_version:
        description: The optional software component's version.
        value:
          $string: "1.0"
          $originalString: "1.0"
          major: 1
          minor: 0
          fix: 0
          qualifier: ""
          build: 0
    attributes:
      state:
        description: The state of the node instance.
        value: initial
      tosca_id:
        description: A unique identifier of the realized instance of a Node Template
          that derives from any TOSCA normative type.
        value: null
      tosca_name:
        description: This attribute reflects the name of the Node Template as defined
          in the TOSCA service template. This name is not unique to the realized instance
          model of corresponding deployed application as each template in the model
          can result in one or more instances (e.g., scaled) when orchestrated to
          a provider environment.
        value: null
    requirements:
    - name: host
      capabilityTypeName: tosca.capabilities.Compute
      capabilityName: ""
      nodeTypeName: tosca.nodes.Compute
      nodeTemplateName: ""
      nodeTemplatePropertyConstraints:
        num_cpus:
        - functionCall:
            url: file:C:\Users\802052047\OneDrive - BT Plc\Documents\MDM\TOSCA\TOSCA_for_TMForum\TR255C\vFirewall.yml
            path: topology_template.node_templates["my_SWI2_linux"].requirements[0].relationship.interfaces["tosca_name"]
            location: 314,11
            name: greater_or_equal
            arguments:
            - value: 4
      capabilityPropertyConstraints:
        os:
          type:
          - functionCall:
              url: file:C:\Users\802052047\OneDrive - BT Plc\Documents\MDM\TOSCA\TOSCA_for_TMForum\TR255C\vFirewall.yml
              path: topology_template.node_templates["my_SWI2_linux"].requirements[0].node_filter.capabilities["os"].properties["type"]
              location: 314,11
              name: equal
              arguments:
              - map:
                - key:
                    value: get_attribute
                  value: my_virtualFirewall
                - key:
                    value: operating_system
                  value: null
      relationship:
        description: This type represents a hosting relationship between two nodes.
        types:
          tosca.relationships.HostedOn:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.7.3
              normative: "true"
              role: host
          tosca.relationships.Root:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.7.1
              normative: "true"
        properties: {}
        attributes:
          state:
            description: The state of the relationship instance.
            value: initial
          tosca_id:
            description: A unique identifier of the realized instance of a Relationship
              Template that derives from any TOSCA normative type.
            value: null
          tosca_name:
            description: This attribute reflects the name of the Relationship Template
              as defined in the TOSCA service template. This name is not unique to
              the realized instance model of corresponding deployed application as
              each template in the model can result in one or more instances (e.g.,
              scaled) when orchestrated to a provider environment.
            value: null
        interfaces:
          Configure:
            description: The lifecycle interfaces define the essential, normative
              operations that each TOSCA Relationship Types may support.
            types:
              tosca.interfaces.Root:
                metadata:
                  citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                  citation_location: 5.8.3
                  normative: "true"
              tosca.interfaces.relationship.Configure:
                metadata:
                  citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                  citation_location: 5.8.5
                  normative: "true"
            inputs: {}
            operations:
              add_source:
                description: Operation to notify the target node of a source node
                  which is now available via a relationship.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              add_target:
                description: Operation to notify the source node of a target node
                  being added via a relationship.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              post_configure_source:
                description: Operation to post-configure the source endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              post_configure_target:
                description: Operation to post-configure the target endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              pre_configure_source:
                description: Operation to pre-configure the source endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              pre_configure_target:
                description: Operation to pre-configure the target endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              remove_source:
                description: Operation to remove the source node.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              remove_target:
                description: Operation to remove a target node.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              target_changed:
                description: Operation to notify source some property or attribute
                  of the target changed
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
            notifications: {}
      path: topology_template.node_templates["my_SWI2_linux"].requirements[0]
    - name: port
      capabilityTypeName: tosca.capabilities.network.Bindable
      capabilityName: ""
      nodeTypeName: tosca.nodes.network.Port
      nodeTemplateName: ""
      nodeTemplatePropertyConstraints: {}
      capabilityPropertyConstraints: {}
      relationship:
        description: This type represents a network association relationship between
          Port and Compute node types.
        types:
          tosca.relationships.DependsOn:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.7.2
              normative: "true"
          tosca.relationships.Root:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.7.1
              normative: "true"
          tosca.relationships.network.BindsTo:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 8.5.5
              normative: "true"
        properties: {}
        attributes:
          state:
            description: The state of the relationship instance.
            value: initial
          tosca_id:
            description: A unique identifier of the realized instance of a Relationship
              Template that derives from any TOSCA normative type.
            value: null
          tosca_name:
            description: This attribute reflects the name of the Relationship Template
              as defined in the TOSCA service template. This name is not unique to
              the realized instance model of corresponding deployed application as
              each template in the model can result in one or more instances (e.g.,
              scaled) when orchestrated to a provider environment.
            value: null
        interfaces:
          Configure:
            description: The lifecycle interfaces define the essential, normative
              operations that each TOSCA Relationship Types may support.
            types:
              tosca.interfaces.Root:
                metadata:
                  citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                  citation_location: 5.8.3
                  normative: "true"
              tosca.interfaces.relationship.Configure:
                metadata:
                  citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                  citation_location: 5.8.5
                  normative: "true"
            inputs: {}
            operations:
              add_source:
                description: Operation to notify the target node of a source node
                  which is now available via a relationship.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              add_target:
                description: Operation to notify the source node of a target node
                  being added via a relationship.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              post_configure_source:
                description: Operation to post-configure the source endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              post_configure_target:
                description: Operation to post-configure the target endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              pre_configure_source:
                description: Operation to pre-configure the source endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              pre_configure_target:
                description: Operation to pre-configure the target endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              remove_source:
                description: Operation to remove the source node.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              remove_target:
                description: Operation to remove a target node.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              target_changed:
                description: Operation to notify source some property or attribute
                  of the target changed
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
            notifications: {}
      path: topology_template.node_templates["my_SWI2_linux"].requirements[1]
    - name: port
      capabilityTypeName: tosca.capabilities.network.Bindable
      capabilityName: ""
      nodeTypeName: tosca.nodes.network.Port
      nodeTemplateName: ""
      nodeTemplatePropertyConstraints: {}
      capabilityPropertyConstraints: {}
      relationship:
        description: This type represents a network association relationship between
          Port and Compute node types.
        types:
          tosca.relationships.DependsOn:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.7.2
              normative: "true"
          tosca.relationships.Root:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.7.1
              normative: "true"
          tosca.relationships.network.BindsTo:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 8.5.5
              normative: "true"
        properties: {}
        attributes:
          state:
            description: The state of the relationship instance.
            value: initial
          tosca_id:
            description: A unique identifier of the realized instance of a Relationship
              Template that derives from any TOSCA normative type.
            value: null
          tosca_name:
            description: This attribute reflects the name of the Relationship Template
              as defined in the TOSCA service template. This name is not unique to
              the realized instance model of corresponding deployed application as
              each template in the model can result in one or more instances (e.g.,
              scaled) when orchestrated to a provider environment.
            value: null
        interfaces:
          Configure:
            description: The lifecycle interfaces define the essential, normative
              operations that each TOSCA Relationship Types may support.
            types:
              tosca.interfaces.Root:
                metadata:
                  citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                  citation_location: 5.8.3
                  normative: "true"
              tosca.interfaces.relationship.Configure:
                metadata:
                  citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                  citation_location: 5.8.5
                  normative: "true"
            inputs: {}
            operations:
              add_source:
                description: Operation to notify the target node of a source node
                  which is now available via a relationship.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              add_target:
                description: Operation to notify the source node of a target node
                  being added via a relationship.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              post_configure_source:
                description: Operation to post-configure the source endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              post_configure_target:
                description: Operation to post-configure the target endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              pre_configure_source:
                description: Operation to pre-configure the source endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              pre_configure_target:
                description: Operation to pre-configure the target endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              remove_source:
                description: Operation to remove the source node.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              remove_target:
                description: Operation to remove a target node.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              target_changed:
                description: Operation to notify source some property or attribute
                  of the target changed
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
            notifications: {}
      path: topology_template.node_templates["my_SWI2_linux"].requirements[2]
    - name: CP2
      capabilityTypeName: tosca.capabilities.Node
      capabilityName: ""
      nodeTypeName: tosca.nodes.network.Port
      nodeTemplateName: ""
      nodeTemplatePropertyConstraints: {}
      capabilityPropertyConstraints: {}
      relationship:
        description: This type represents a general dependency relationship between
          two nodes.
        types:
          tosca.relationships.DependsOn:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.7.2
              normative: "true"
          tosca.relationships.Root:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.7.1
              normative: "true"
        properties: {}
        attributes:
          state:
            description: The state of the relationship instance.
            value: initial
          tosca_id:
            description: A unique identifier of the realized instance of a Relationship
              Template that derives from any TOSCA normative type.
            value: null
          tosca_name:
            description: This attribute reflects the name of the Relationship Template
              as defined in the TOSCA service template. This name is not unique to
              the realized instance model of corresponding deployed application as
              each template in the model can result in one or more instances (e.g.,
              scaled) when orchestrated to a provider environment.
            value: null
        interfaces:
          Configure:
            description: The lifecycle interfaces define the essential, normative
              operations that each TOSCA Relationship Types may support.
            types:
              tosca.interfaces.Root:
                metadata:
                  citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                  citation_location: 5.8.3
                  normative: "true"
              tosca.interfaces.relationship.Configure:
                metadata:
                  citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                  citation_location: 5.8.5
                  normative: "true"
            inputs: {}
            operations:
              add_source:
                description: Operation to notify the target node of a source node
                  which is now available via a relationship.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              add_target:
                description: Operation to notify the source node of a target node
                  being added via a relationship.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              post_configure_source:
                description: Operation to post-configure the source endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              post_configure_target:
                description: Operation to post-configure the target endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              pre_configure_source:
                description: Operation to pre-configure the source endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              pre_configure_target:
                description: Operation to pre-configure the target endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              remove_source:
                description: Operation to remove the source node.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              remove_target:
                description: Operation to remove a target node.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              target_changed:
                description: Operation to notify source some property or attribute
                  of the target changed
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
            notifications: {}
      path: topology_template.node_templates["my_SWI2_linux"].requirements[3]
    - name: CP14
      capabilityTypeName: tosca.capabilities.Node
      capabilityName: ""
      nodeTypeName: tosca.nodes.network.Port
      nodeTemplateName: ""
      nodeTemplatePropertyConstraints: {}
      capabilityPropertyConstraints: {}
      relationship:
        description: This type represents a general dependency relationship between
          two nodes.
        types:
          tosca.relationships.DependsOn:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.7.2
              normative: "true"
          tosca.relationships.Root:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.7.1
              normative: "true"
        properties: {}
        attributes:
          state:
            description: The state of the relationship instance.
            value: initial
          tosca_id:
            description: A unique identifier of the realized instance of a Relationship
              Template that derives from any TOSCA normative type.
            value: null
          tosca_name:
            description: This attribute reflects the name of the Relationship Template
              as defined in the TOSCA service template. This name is not unique to
              the realized instance model of corresponding deployed application as
              each template in the model can result in one or more instances (e.g.,
              scaled) when orchestrated to a provider environment.
            value: null
        interfaces:
          Configure:
            description: The lifecycle interfaces define the essential, normative
              operations that each TOSCA Relationship Types may support.
            types:
              tosca.interfaces.Root:
                metadata:
                  citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                  citation_location: 5.8.3
                  normative: "true"
              tosca.interfaces.relationship.Configure:
                metadata:
                  citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                  citation_location: 5.8.5
                  normative: "true"
            inputs: {}
            operations:
              add_source:
                description: Operation to notify the target node of a source node
                  which is now available via a relationship.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              add_target:
                description: Operation to notify the source node of a target node
                  being added via a relationship.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              post_configure_source:
                description: Operation to post-configure the source endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              post_configure_target:
                description: Operation to post-configure the target endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              pre_configure_source:
                description: Operation to pre-configure the source endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              pre_configure_target:
                description: Operation to pre-configure the target endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              remove_source:
                description: Operation to remove the source node.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              remove_target:
                description: Operation to remove a target node.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              target_changed:
                description: Operation to notify source some property or attribute
                  of the target changed
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
            notifications: {}
      path: topology_template.node_templates["my_SWI2_linux"].requirements[4]
    capabilities:
      feature:
        description: The Node capability indicates the base capabilities of a TOSCA
          Node Type.
        types:
          tosca.capabilities.Node:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.5.2
              normative: "true"
              role: feature
          tosca.capabilities.Root:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.5.1
              normative: "true"
        properties: {}
        attributes: {}
        minRelationshipCount: 0
        maxRelationshipCount: -1
    interfaces:
      Standard:
        description: This lifecycle interface defines the essential, normative operations
          that TOSCA nodes may support.
        types:
          tosca.interfaces.Root:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.8.3
              normative: "true"
          tosca.interfaces.node.lifecycle.Standard:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.8.4
              normative: "true"
        inputs: {}
        operations:
          configure:
            description: Standard lifecycle configure operation.
            implementation: ""
            dependencies: []
            inputs: {}
            timeout: -1
            host: ""
          create:
            description: Standard lifecycle create operation.
            implementation: ""
            dependencies: []
            inputs: {}
            timeout: -1
            host: ""
          delete:
            description: Standard lifecycle delete operation.
            implementation: ""
            dependencies: []
            inputs: {}
            timeout: -1
            host: ""
          start:
            description: Standard lifecycle start operation.
            implementation: ""
            dependencies: []
            inputs: {}
            timeout: -1
            host: ""
          stop:
            description: Standard lifecycle stop operation.
            implementation: ""
            dependencies: []
            inputs: {}
            timeout: -1
            host: ""
        notifications: {}
    artifacts:
      patch:
        description: This artifact type represents the parent type for all deployment
          artifacts in TOSCA. This class of artifacts typically represents a binary
          packaging of an application or service that is used to install/create or
          deploy it as part of a node's lifecycle.
        types:
          tosca.artifacts.Deployment:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.4.3.1
              normative: "true"
          tosca.artifacts.Root:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.4.1
              normative: "true"
        properties: {}
        sourcePath: images/fw-filter-fedora-18-x86_64.diff
        targetPath: ""
  my_SWI2_windows:
    description: A software component with ports
    types:
      SWI2:
        metadata: {}
      SWI2_windows:
        metadata: {}
      tosca.nodes.Root:
        metadata:
          citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
          citation_location: 5.9.1
          normative: "true"
      tosca.nodes.SoftwareComponent:
        metadata:
          citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
          citation_location: 5.9.4
          normative: "true"
      tosca.nodes.SoftwareComponent.networked:
        metadata: {}
    directives: []
    properties:
      admin_credential:
        description: The optional credential that can be used to authenticate to the
          software component.
        map:
        - key:
            value: user
          description: The optional user (name or ID) used for non-token based credentials.
          value: myusername
        - key:
            value: token
          description: The required token used as a credential for authorization or
            access to a networked resource.
          value: mypassword
        - key:
            value: token_type
          description: The required token type.
          value: password
      component_version:
        description: The optional software component's version.
        value:
          $string: "1.0"
          $originalString: "1.0"
          major: 1
          minor: 0
          fix: 0
          qualifier: ""
          build: 0
    attributes:
      state:
        description: The state of the node instance.
        value: initial
      tosca_id:
        description: A unique identifier of the realized instance of a Node Template
          that derives from any TOSCA normative type.
        value: null
      tosca_name:
        description: This attribute reflects the name of the Node Template as defined
          in the TOSCA service template. This name is not unique to the realized instance
          model of corresponding deployed application as each template in the model
          can result in one or more instances (e.g., scaled) when orchestrated to
          a provider environment.
        value: null
    requirements:
    - name: host
      capabilityTypeName: tosca.capabilities.Compute
      capabilityName: ""
      nodeTypeName: tosca.nodes.Compute
      nodeTemplateName: ""
      nodeTemplatePropertyConstraints:
        num_cpus:
        - functionCall:
            url: file:C:\Users\802052047\OneDrive - BT Plc\Documents\MDM\TOSCA\TOSCA_for_TMForum\TR255C\vFirewall.yml
            path: topology_template.node_templates["my_SWI2_windows"].requirements[0].relationship.interfaces["tosca_name"]
            location: 338,11
            name: greater_or_equal
            arguments:
            - value: 6
      capabilityPropertyConstraints:
        os:
          type:
          - functionCall:
              url: file:C:\Users\802052047\OneDrive - BT Plc\Documents\MDM\TOSCA\TOSCA_for_TMForum\TR255C\vFirewall.yml
              path: topology_template.node_templates["my_SWI2_windows"].requirements[0].node_filter.capabilities["os"].properties["type"]
              location: 338,11
              name: equal
              arguments:
              - map:
                - key:
                    value: get_attribute
                  value: my_virtualFirewall
                - key:
                    value: operating_system
                  value: null
      relationship:
        description: This type represents a hosting relationship between two nodes.
        types:
          tosca.relationships.HostedOn:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.7.3
              normative: "true"
              role: host
          tosca.relationships.Root:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.7.1
              normative: "true"
        properties: {}
        attributes:
          state:
            description: The state of the relationship instance.
            value: initial
          tosca_id:
            description: A unique identifier of the realized instance of a Relationship
              Template that derives from any TOSCA normative type.
            value: null
          tosca_name:
            description: This attribute reflects the name of the Relationship Template
              as defined in the TOSCA service template. This name is not unique to
              the realized instance model of corresponding deployed application as
              each template in the model can result in one or more instances (e.g.,
              scaled) when orchestrated to a provider environment.
            value: null
        interfaces:
          Configure:
            description: The lifecycle interfaces define the essential, normative
              operations that each TOSCA Relationship Types may support.
            types:
              tosca.interfaces.Root:
                metadata:
                  citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                  citation_location: 5.8.3
                  normative: "true"
              tosca.interfaces.relationship.Configure:
                metadata:
                  citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                  citation_location: 5.8.5
                  normative: "true"
            inputs: {}
            operations:
              add_source:
                description: Operation to notify the target node of a source node
                  which is now available via a relationship.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              add_target:
                description: Operation to notify the source node of a target node
                  being added via a relationship.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              post_configure_source:
                description: Operation to post-configure the source endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              post_configure_target:
                description: Operation to post-configure the target endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              pre_configure_source:
                description: Operation to pre-configure the source endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              pre_configure_target:
                description: Operation to pre-configure the target endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              remove_source:
                description: Operation to remove the source node.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              remove_target:
                description: Operation to remove a target node.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              target_changed:
                description: Operation to notify source some property or attribute
                  of the target changed
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
            notifications: {}
      path: topology_template.node_templates["my_SWI2_windows"].requirements[0]
    - name: port
      capabilityTypeName: tosca.capabilities.network.Bindable
      capabilityName: ""
      nodeTypeName: tosca.nodes.network.Port
      nodeTemplateName: ""
      nodeTemplatePropertyConstraints: {}
      capabilityPropertyConstraints: {}
      relationship:
        description: This type represents a network association relationship between
          Port and Compute node types.
        types:
          tosca.relationships.DependsOn:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.7.2
              normative: "true"
          tosca.relationships.Root:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.7.1
              normative: "true"
          tosca.relationships.network.BindsTo:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 8.5.5
              normative: "true"
        properties: {}
        attributes:
          state:
            description: The state of the relationship instance.
            value: initial
          tosca_id:
            description: A unique identifier of the realized instance of a Relationship
              Template that derives from any TOSCA normative type.
            value: null
          tosca_name:
            description: This attribute reflects the name of the Relationship Template
              as defined in the TOSCA service template. This name is not unique to
              the realized instance model of corresponding deployed application as
              each template in the model can result in one or more instances (e.g.,
              scaled) when orchestrated to a provider environment.
            value: null
        interfaces:
          Configure:
            description: The lifecycle interfaces define the essential, normative
              operations that each TOSCA Relationship Types may support.
            types:
              tosca.interfaces.Root:
                metadata:
                  citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                  citation_location: 5.8.3
                  normative: "true"
              tosca.interfaces.relationship.Configure:
                metadata:
                  citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                  citation_location: 5.8.5
                  normative: "true"
            inputs: {}
            operations:
              add_source:
                description: Operation to notify the target node of a source node
                  which is now available via a relationship.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              add_target:
                description: Operation to notify the source node of a target node
                  being added via a relationship.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              post_configure_source:
                description: Operation to post-configure the source endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              post_configure_target:
                description: Operation to post-configure the target endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              pre_configure_source:
                description: Operation to pre-configure the source endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              pre_configure_target:
                description: Operation to pre-configure the target endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              remove_source:
                description: Operation to remove the source node.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              remove_target:
                description: Operation to remove a target node.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              target_changed:
                description: Operation to notify source some property or attribute
                  of the target changed
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
            notifications: {}
      path: topology_template.node_templates["my_SWI2_windows"].requirements[1]
    - name: port
      capabilityTypeName: tosca.capabilities.network.Bindable
      capabilityName: ""
      nodeTypeName: tosca.nodes.network.Port
      nodeTemplateName: ""
      nodeTemplatePropertyConstraints: {}
      capabilityPropertyConstraints: {}
      relationship:
        description: This type represents a network association relationship between
          Port and Compute node types.
        types:
          tosca.relationships.DependsOn:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.7.2
              normative: "true"
          tosca.relationships.Root:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.7.1
              normative: "true"
          tosca.relationships.network.BindsTo:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 8.5.5
              normative: "true"
        properties: {}
        attributes:
          state:
            description: The state of the relationship instance.
            value: initial
          tosca_id:
            description: A unique identifier of the realized instance of a Relationship
              Template that derives from any TOSCA normative type.
            value: null
          tosca_name:
            description: This attribute reflects the name of the Relationship Template
              as defined in the TOSCA service template. This name is not unique to
              the realized instance model of corresponding deployed application as
              each template in the model can result in one or more instances (e.g.,
              scaled) when orchestrated to a provider environment.
            value: null
        interfaces:
          Configure:
            description: The lifecycle interfaces define the essential, normative
              operations that each TOSCA Relationship Types may support.
            types:
              tosca.interfaces.Root:
                metadata:
                  citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                  citation_location: 5.8.3
                  normative: "true"
              tosca.interfaces.relationship.Configure:
                metadata:
                  citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                  citation_location: 5.8.5
                  normative: "true"
            inputs: {}
            operations:
              add_source:
                description: Operation to notify the target node of a source node
                  which is now available via a relationship.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              add_target:
                description: Operation to notify the source node of a target node
                  being added via a relationship.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              post_configure_source:
                description: Operation to post-configure the source endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              post_configure_target:
                description: Operation to post-configure the target endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              pre_configure_source:
                description: Operation to pre-configure the source endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              pre_configure_target:
                description: Operation to pre-configure the target endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              remove_source:
                description: Operation to remove the source node.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              remove_target:
                description: Operation to remove a target node.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              target_changed:
                description: Operation to notify source some property or attribute
                  of the target changed
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
            notifications: {}
      path: topology_template.node_templates["my_SWI2_windows"].requirements[2]
    - name: CP14
      capabilityTypeName: tosca.capabilities.Node
      capabilityName: ""
      nodeTypeName: tosca.nodes.network.Port
      nodeTemplateName: ""
      nodeTemplatePropertyConstraints: {}
      capabilityPropertyConstraints: {}
      relationship:
        description: This type represents a general dependency relationship between
          two nodes.
        types:
          tosca.relationships.DependsOn:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.7.2
              normative: "true"
          tosca.relationships.Root:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.7.1
              normative: "true"
        properties: {}
        attributes:
          state:
            description: The state of the relationship instance.
            value: initial
          tosca_id:
            description: A unique identifier of the realized instance of a Relationship
              Template that derives from any TOSCA normative type.
            value: null
          tosca_name:
            description: This attribute reflects the name of the Relationship Template
              as defined in the TOSCA service template. This name is not unique to
              the realized instance model of corresponding deployed application as
              each template in the model can result in one or more instances (e.g.,
              scaled) when orchestrated to a provider environment.
            value: null
        interfaces:
          Configure:
            description: The lifecycle interfaces define the essential, normative
              operations that each TOSCA Relationship Types may support.
            types:
              tosca.interfaces.Root:
                metadata:
                  citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                  citation_location: 5.8.3
                  normative: "true"
              tosca.interfaces.relationship.Configure:
                metadata:
                  citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                  citation_location: 5.8.5
                  normative: "true"
            inputs: {}
            operations:
              add_source:
                description: Operation to notify the target node of a source node
                  which is now available via a relationship.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              add_target:
                description: Operation to notify the source node of a target node
                  being added via a relationship.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              post_configure_source:
                description: Operation to post-configure the source endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              post_configure_target:
                description: Operation to post-configure the target endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              pre_configure_source:
                description: Operation to pre-configure the source endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              pre_configure_target:
                description: Operation to pre-configure the target endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              remove_source:
                description: Operation to remove the source node.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              remove_target:
                description: Operation to remove a target node.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              target_changed:
                description: Operation to notify source some property or attribute
                  of the target changed
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
            notifications: {}
      path: topology_template.node_templates["my_SWI2_windows"].requirements[3]
    - name: CP2
      capabilityTypeName: tosca.capabilities.Node
      capabilityName: ""
      nodeTypeName: tosca.nodes.network.Port
      nodeTemplateName: ""
      nodeTemplatePropertyConstraints: {}
      capabilityPropertyConstraints: {}
      relationship:
        description: This type represents a general dependency relationship between
          two nodes.
        types:
          tosca.relationships.DependsOn:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.7.2
              normative: "true"
          tosca.relationships.Root:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.7.1
              normative: "true"
        properties: {}
        attributes:
          state:
            description: The state of the relationship instance.
            value: initial
          tosca_id:
            description: A unique identifier of the realized instance of a Relationship
              Template that derives from any TOSCA normative type.
            value: null
          tosca_name:
            description: This attribute reflects the name of the Relationship Template
              as defined in the TOSCA service template. This name is not unique to
              the realized instance model of corresponding deployed application as
              each template in the model can result in one or more instances (e.g.,
              scaled) when orchestrated to a provider environment.
            value: null
        interfaces:
          Configure:
            description: The lifecycle interfaces define the essential, normative
              operations that each TOSCA Relationship Types may support.
            types:
              tosca.interfaces.Root:
                metadata:
                  citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                  citation_location: 5.8.3
                  normative: "true"
              tosca.interfaces.relationship.Configure:
                metadata:
                  citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                  citation_location: 5.8.5
                  normative: "true"
            inputs: {}
            operations:
              add_source:
                description: Operation to notify the target node of a source node
                  which is now available via a relationship.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              add_target:
                description: Operation to notify the source node of a target node
                  being added via a relationship.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              post_configure_source:
                description: Operation to post-configure the source endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              post_configure_target:
                description: Operation to post-configure the target endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              pre_configure_source:
                description: Operation to pre-configure the source endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              pre_configure_target:
                description: Operation to pre-configure the target endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              remove_source:
                description: Operation to remove the source node.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              remove_target:
                description: Operation to remove a target node.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              target_changed:
                description: Operation to notify source some property or attribute
                  of the target changed
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
            notifications: {}
      path: topology_template.node_templates["my_SWI2_windows"].requirements[4]
    capabilities:
      feature:
        description: The Node capability indicates the base capabilities of a TOSCA
          Node Type.
        types:
          tosca.capabilities.Node:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.5.2
              normative: "true"
              role: feature
          tosca.capabilities.Root:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.5.1
              normative: "true"
        properties: {}
        attributes: {}
        minRelationshipCount: 0
        maxRelationshipCount: -1
    interfaces:
      Standard:
        description: This lifecycle interface defines the essential, normative operations
          that TOSCA nodes may support.
        types:
          tosca.interfaces.Root:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.8.3
              normative: "true"
          tosca.interfaces.node.lifecycle.Standard:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.8.4
              normative: "true"
        inputs: {}
        operations:
          configure:
            description: Standard lifecycle configure operation.
            implementation: ""
            dependencies: []
            inputs: {}
            timeout: -1
            host: ""
          create:
            description: Standard lifecycle create operation.
            implementation: ""
            dependencies: []
            inputs: {}
            timeout: -1
            host: ""
          delete:
            description: Standard lifecycle delete operation.
            implementation: ""
            dependencies: []
            inputs: {}
            timeout: -1
            host: ""
          start:
            description: Standard lifecycle start operation.
            implementation: ""
            dependencies: []
            inputs: {}
            timeout: -1
            host: ""
          stop:
            description: Standard lifecycle stop operation.
            implementation: ""
            dependencies: []
            inputs: {}
            timeout: -1
            host: ""
        notifications: {}
    artifacts:
      patch:
        description: This artifact type represents the parent type for all deployment
          artifacts in TOSCA. This class of artifacts typically represents a binary
          packaging of an application or service that is used to install/create or
          deploy it as part of a node's lifecycle.
        types:
          tosca.artifacts.Deployment:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.4.3.1
              normative: "true"
          tosca.artifacts.Root:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.4.1
              normative: "true"
        properties: {}
        sourcePath: images/fw-filter-windows-10-x86_64.diff
        targetPath: ""
  my_SWI4_linux:
    description: A software component with ports
    types:
      SWI4:
        metadata: {}
      SWI4_linux:
        metadata: {}
      tosca.nodes.Root:
        metadata:
          citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
          citation_location: 5.9.1
          normative: "true"
      tosca.nodes.SoftwareComponent:
        metadata:
          citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
          citation_location: 5.9.4
          normative: "true"
      tosca.nodes.SoftwareComponent.networked:
        metadata: {}
    directives: []
    properties:
      admin_credential:
        description: The optional credential that can be used to authenticate to the
          software component.
        map:
        - key:
            value: user
          description: The optional user (name or ID) used for non-token based credentials.
          value: myusername
        - key:
            value: token
          description: The required token used as a credential for authorization or
            access to a networked resource.
          value: mypassword
        - key:
            value: token_type
          description: The required token type.
          value: password
      component_version:
        description: The optional software component's version.
        value:
          $string: "1.0"
          $originalString: "1.0"
          major: 1
          minor: 0
          fix: 0
          qualifier: ""
          build: 0
    attributes:
      state:
        description: The state of the node instance.
        value: initial
      tosca_id:
        description: A unique identifier of the realized instance of a Node Template
          that derives from any TOSCA normative type.
        value: null
      tosca_name:
        description: This attribute reflects the name of the Node Template as defined
          in the TOSCA service template. This name is not unique to the realized instance
          model of corresponding deployed application as each template in the model
          can result in one or more instances (e.g., scaled) when orchestrated to
          a provider environment.
        value: null
    requirements:
    - name: host
      capabilityTypeName: tosca.capabilities.Compute
      capabilityName: ""
      nodeTypeName: tosca.nodes.Compute
      nodeTemplateName: ""
      nodeTemplatePropertyConstraints:
        num_cpus:
        - functionCall:
            url: file:C:\Users\802052047\OneDrive - BT Plc\Documents\MDM\TOSCA\TOSCA_for_TMForum\TR255C\vFirewall.yml
            path: topology_template.node_templates["my_SWI4_linux"].requirements[0].relationship.interfaces["tosca_name"]
            location: 362,11
            name: greater_or_equal
            arguments:
            - value: 4
      capabilityPropertyConstraints:
        os:
          type:
          - functionCall:
              url: file:C:\Users\802052047\OneDrive - BT Plc\Documents\MDM\TOSCA\TOSCA_for_TMForum\TR255C\vFirewall.yml
              path: topology_template.node_templates["my_SWI4_linux"].requirements[0].node_filter.capabilities["os"].properties["type"]
              location: 362,11
              name: equal
              arguments:
              - map:
                - key:
                    value: get_attribute
                  value: my_virtualFirewall
                - key:
                    value: operating_system
                  value: null
      relationship:
        description: This type represents a hosting relationship between two nodes.
        types:
          tosca.relationships.HostedOn:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.7.3
              normative: "true"
              role: host
          tosca.relationships.Root:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.7.1
              normative: "true"
        properties: {}
        attributes:
          state:
            description: The state of the relationship instance.
            value: initial
          tosca_id:
            description: A unique identifier of the realized instance of a Relationship
              Template that derives from any TOSCA normative type.
            value: null
          tosca_name:
            description: This attribute reflects the name of the Relationship Template
              as defined in the TOSCA service template. This name is not unique to
              the realized instance model of corresponding deployed application as
              each template in the model can result in one or more instances (e.g.,
              scaled) when orchestrated to a provider environment.
            value: null
        interfaces:
          Configure:
            description: The lifecycle interfaces define the essential, normative
              operations that each TOSCA Relationship Types may support.
            types:
              tosca.interfaces.Root:
                metadata:
                  citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                  citation_location: 5.8.3
                  normative: "true"
              tosca.interfaces.relationship.Configure:
                metadata:
                  citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                  citation_location: 5.8.5
                  normative: "true"
            inputs: {}
            operations:
              add_source:
                description: Operation to notify the target node of a source node
                  which is now available via a relationship.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              add_target:
                description: Operation to notify the source node of a target node
                  being added via a relationship.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              post_configure_source:
                description: Operation to post-configure the source endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              post_configure_target:
                description: Operation to post-configure the target endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              pre_configure_source:
                description: Operation to pre-configure the source endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              pre_configure_target:
                description: Operation to pre-configure the target endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              remove_source:
                description: Operation to remove the source node.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              remove_target:
                description: Operation to remove a target node.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              target_changed:
                description: Operation to notify source some property or attribute
                  of the target changed
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
            notifications: {}
      path: topology_template.node_templates["my_SWI4_linux"].requirements[0]
    - name: port
      capabilityTypeName: tosca.capabilities.network.Bindable
      capabilityName: ""
      nodeTypeName: tosca.nodes.network.Port
      nodeTemplateName: ""
      nodeTemplatePropertyConstraints: {}
      capabilityPropertyConstraints: {}
      relationship:
        description: This type represents a network association relationship between
          Port and Compute node types.
        types:
          tosca.relationships.DependsOn:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.7.2
              normative: "true"
          tosca.relationships.Root:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.7.1
              normative: "true"
          tosca.relationships.network.BindsTo:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 8.5.5
              normative: "true"
        properties: {}
        attributes:
          state:
            description: The state of the relationship instance.
            value: initial
          tosca_id:
            description: A unique identifier of the realized instance of a Relationship
              Template that derives from any TOSCA normative type.
            value: null
          tosca_name:
            description: This attribute reflects the name of the Relationship Template
              as defined in the TOSCA service template. This name is not unique to
              the realized instance model of corresponding deployed application as
              each template in the model can result in one or more instances (e.g.,
              scaled) when orchestrated to a provider environment.
            value: null
        interfaces:
          Configure:
            description: The lifecycle interfaces define the essential, normative
              operations that each TOSCA Relationship Types may support.
            types:
              tosca.interfaces.Root:
                metadata:
                  citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                  citation_location: 5.8.3
                  normative: "true"
              tosca.interfaces.relationship.Configure:
                metadata:
                  citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                  citation_location: 5.8.5
                  normative: "true"
            inputs: {}
            operations:
              add_source:
                description: Operation to notify the target node of a source node
                  which is now available via a relationship.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              add_target:
                description: Operation to notify the source node of a target node
                  being added via a relationship.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              post_configure_source:
                description: Operation to post-configure the source endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              post_configure_target:
                description: Operation to post-configure the target endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              pre_configure_source:
                description: Operation to pre-configure the source endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              pre_configure_target:
                description: Operation to pre-configure the target endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              remove_source:
                description: Operation to remove the source node.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              remove_target:
                description: Operation to remove a target node.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              target_changed:
                description: Operation to notify source some property or attribute
                  of the target changed
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
            notifications: {}
      path: topology_template.node_templates["my_SWI4_linux"].requirements[1]
    - name: port
      capabilityTypeName: tosca.capabilities.network.Bindable
      capabilityName: ""
      nodeTypeName: tosca.nodes.network.Port
      nodeTemplateName: ""
      nodeTemplatePropertyConstraints: {}
      capabilityPropertyConstraints: {}
      relationship:
        description: This type represents a network association relationship between
          Port and Compute node types.
        types:
          tosca.relationships.DependsOn:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.7.2
              normative: "true"
          tosca.relationships.Root:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.7.1
              normative: "true"
          tosca.relationships.network.BindsTo:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 8.5.5
              normative: "true"
        properties: {}
        attributes:
          state:
            description: The state of the relationship instance.
            value: initial
          tosca_id:
            description: A unique identifier of the realized instance of a Relationship
              Template that derives from any TOSCA normative type.
            value: null
          tosca_name:
            description: This attribute reflects the name of the Relationship Template
              as defined in the TOSCA service template. This name is not unique to
              the realized instance model of corresponding deployed application as
              each template in the model can result in one or more instances (e.g.,
              scaled) when orchestrated to a provider environment.
            value: null
        interfaces:
          Configure:
            description: The lifecycle interfaces define the essential, normative
              operations that each TOSCA Relationship Types may support.
            types:
              tosca.interfaces.Root:
                metadata:
                  citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                  citation_location: 5.8.3
                  normative: "true"
              tosca.interfaces.relationship.Configure:
                metadata:
                  citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                  citation_location: 5.8.5
                  normative: "true"
            inputs: {}
            operations:
              add_source:
                description: Operation to notify the target node of a source node
                  which is now available via a relationship.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              add_target:
                description: Operation to notify the source node of a target node
                  being added via a relationship.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              post_configure_source:
                description: Operation to post-configure the source endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              post_configure_target:
                description: Operation to post-configure the target endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              pre_configure_source:
                description: Operation to pre-configure the source endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              pre_configure_target:
                description: Operation to pre-configure the target endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              remove_source:
                description: Operation to remove the source node.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              remove_target:
                description: Operation to remove a target node.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              target_changed:
                description: Operation to notify source some property or attribute
                  of the target changed
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
            notifications: {}
      path: topology_template.node_templates["my_SWI4_linux"].requirements[2]
    - name: CP8
      capabilityTypeName: tosca.capabilities.Node
      capabilityName: ""
      nodeTypeName: tosca.nodes.network.Port
      nodeTemplateName: ""
      nodeTemplatePropertyConstraints: {}
      capabilityPropertyConstraints: {}
      relationship:
        description: This type represents a general dependency relationship between
          two nodes.
        types:
          tosca.relationships.DependsOn:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.7.2
              normative: "true"
          tosca.relationships.Root:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.7.1
              normative: "true"
        properties: {}
        attributes:
          state:
            description: The state of the relationship instance.
            value: initial
          tosca_id:
            description: A unique identifier of the realized instance of a Relationship
              Template that derives from any TOSCA normative type.
            value: null
          tosca_name:
            description: This attribute reflects the name of the Relationship Template
              as defined in the TOSCA service template. This name is not unique to
              the realized instance model of corresponding deployed application as
              each template in the model can result in one or more instances (e.g.,
              scaled) when orchestrated to a provider environment.
            value: null
        interfaces:
          Configure:
            description: The lifecycle interfaces define the essential, normative
              operations that each TOSCA Relationship Types may support.
            types:
              tosca.interfaces.Root:
                metadata:
                  citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                  citation_location: 5.8.3
                  normative: "true"
              tosca.interfaces.relationship.Configure:
                metadata:
                  citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                  citation_location: 5.8.5
                  normative: "true"
            inputs: {}
            operations:
              add_source:
                description: Operation to notify the target node of a source node
                  which is now available via a relationship.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              add_target:
                description: Operation to notify the source node of a target node
                  being added via a relationship.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              post_configure_source:
                description: Operation to post-configure the source endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              post_configure_target:
                description: Operation to post-configure the target endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              pre_configure_source:
                description: Operation to pre-configure the source endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              pre_configure_target:
                description: Operation to pre-configure the target endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              remove_source:
                description: Operation to remove the source node.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              remove_target:
                description: Operation to remove a target node.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              target_changed:
                description: Operation to notify source some property or attribute
                  of the target changed
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
            notifications: {}
      path: topology_template.node_templates["my_SWI4_linux"].requirements[3]
    - name: CP9
      capabilityTypeName: tosca.capabilities.Node
      capabilityName: ""
      nodeTypeName: tosca.nodes.network.Port
      nodeTemplateName: ""
      nodeTemplatePropertyConstraints: {}
      capabilityPropertyConstraints: {}
      relationship:
        description: This type represents a general dependency relationship between
          two nodes.
        types:
          tosca.relationships.DependsOn:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.7.2
              normative: "true"
          tosca.relationships.Root:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.7.1
              normative: "true"
        properties: {}
        attributes:
          state:
            description: The state of the relationship instance.
            value: initial
          tosca_id:
            description: A unique identifier of the realized instance of a Relationship
              Template that derives from any TOSCA normative type.
            value: null
          tosca_name:
            description: This attribute reflects the name of the Relationship Template
              as defined in the TOSCA service template. This name is not unique to
              the realized instance model of corresponding deployed application as
              each template in the model can result in one or more instances (e.g.,
              scaled) when orchestrated to a provider environment.
            value: null
        interfaces:
          Configure:
            description: The lifecycle interfaces define the essential, normative
              operations that each TOSCA Relationship Types may support.
            types:
              tosca.interfaces.Root:
                metadata:
                  citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                  citation_location: 5.8.3
                  normative: "true"
              tosca.interfaces.relationship.Configure:
                metadata:
                  citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                  citation_location: 5.8.5
                  normative: "true"
            inputs: {}
            operations:
              add_source:
                description: Operation to notify the target node of a source node
                  which is now available via a relationship.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              add_target:
                description: Operation to notify the source node of a target node
                  being added via a relationship.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              post_configure_source:
                description: Operation to post-configure the source endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              post_configure_target:
                description: Operation to post-configure the target endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              pre_configure_source:
                description: Operation to pre-configure the source endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              pre_configure_target:
                description: Operation to pre-configure the target endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              remove_source:
                description: Operation to remove the source node.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              remove_target:
                description: Operation to remove a target node.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              target_changed:
                description: Operation to notify source some property or attribute
                  of the target changed
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
            notifications: {}
      path: topology_template.node_templates["my_SWI4_linux"].requirements[4]
    capabilities:
      feature:
        description: The Node capability indicates the base capabilities of a TOSCA
          Node Type.
        types:
          tosca.capabilities.Node:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.5.2
              normative: "true"
              role: feature
          tosca.capabilities.Root:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.5.1
              normative: "true"
        properties: {}
        attributes: {}
        minRelationshipCount: 0
        maxRelationshipCount: -1
    interfaces:
      Standard:
        description: This lifecycle interface defines the essential, normative operations
          that TOSCA nodes may support.
        types:
          tosca.interfaces.Root:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.8.3
              normative: "true"
          tosca.interfaces.node.lifecycle.Standard:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.8.4
              normative: "true"
        inputs: {}
        operations:
          configure:
            description: Standard lifecycle configure operation.
            implementation: ""
            dependencies: []
            inputs: {}
            timeout: -1
            host: ""
          create:
            description: Standard lifecycle create operation.
            implementation: ""
            dependencies: []
            inputs: {}
            timeout: -1
            host: ""
          delete:
            description: Standard lifecycle delete operation.
            implementation: ""
            dependencies: []
            inputs: {}
            timeout: -1
            host: ""
          start:
            description: Standard lifecycle start operation.
            implementation: ""
            dependencies: []
            inputs: {}
            timeout: -1
            host: ""
          stop:
            description: Standard lifecycle stop operation.
            implementation: ""
            dependencies: []
            inputs: {}
            timeout: -1
            host: ""
        notifications: {}
    artifacts:
      patch:
        description: This artifact type represents the parent type for all deployment
          artifacts in TOSCA. This class of artifacts typically represents a binary
          packaging of an application or service that is used to install/create or
          deploy it as part of a node's lifecycle.
        types:
          tosca.artifacts.Deployment:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.4.3.1
              normative: "true"
          tosca.artifacts.Root:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.4.1
              normative: "true"
        properties: {}
        sourcePath: images/fw-filter-fedora-18-x86_64.diff
        targetPath: ""
  my_SWI4_windows:
    description: A software component with ports
    types:
      SWI4:
        metadata: {}
      SWI4_windows:
        metadata: {}
      tosca.nodes.Root:
        metadata:
          citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
          citation_location: 5.9.1
          normative: "true"
      tosca.nodes.SoftwareComponent:
        metadata:
          citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
          citation_location: 5.9.4
          normative: "true"
      tosca.nodes.SoftwareComponent.networked:
        metadata: {}
    directives: []
    properties:
      admin_credential:
        description: The optional credential that can be used to authenticate to the
          software component.
        map:
        - key:
            value: user
          description: The optional user (name or ID) used for non-token based credentials.
          value: myusername
        - key:
            value: token
          description: The required token used as a credential for authorization or
            access to a networked resource.
          value: mypassword
        - key:
            value: token_type
          description: The required token type.
          value: password
      component_version:
        description: The optional software component's version.
        value:
          $string: "1.0"
          $originalString: "1.0"
          major: 1
          minor: 0
          fix: 0
          qualifier: ""
          build: 0
    attributes:
      state:
        description: The state of the node instance.
        value: initial
      tosca_id:
        description: A unique identifier of the realized instance of a Node Template
          that derives from any TOSCA normative type.
        value: null
      tosca_name:
        description: This attribute reflects the name of the Node Template as defined
          in the TOSCA service template. This name is not unique to the realized instance
          model of corresponding deployed application as each template in the model
          can result in one or more instances (e.g., scaled) when orchestrated to
          a provider environment.
        value: null
    requirements:
    - name: host
      capabilityTypeName: tosca.capabilities.Compute
      capabilityName: ""
      nodeTypeName: tosca.nodes.Compute
      nodeTemplateName: ""
      nodeTemplatePropertyConstraints:
        num_cpus:
        - functionCall:
            url: file:C:\Users\802052047\OneDrive - BT Plc\Documents\MDM\TOSCA\TOSCA_for_TMForum\TR255C\vFirewall.yml
            path: topology_template.node_templates["my_SWI4_windows"].requirements[0].relationship.interfaces["tosca_name"]
            location: 386,11
            name: greater_or_equal
            arguments:
            - value: 6
      capabilityPropertyConstraints:
        os:
          type:
          - functionCall:
              url: file:C:\Users\802052047\OneDrive - BT Plc\Documents\MDM\TOSCA\TOSCA_for_TMForum\TR255C\vFirewall.yml
              path: topology_template.node_templates["my_SWI4_windows"].requirements[0].node_filter.capabilities["os"].properties["type"]
              location: 386,11
              name: equal
              arguments:
              - map:
                - key:
                    value: get_attribute
                  value: my_virtualFirewall
                - key:
                    value: operating_system
                  value: null
      relationship:
        description: This type represents a hosting relationship between two nodes.
        types:
          tosca.relationships.HostedOn:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.7.3
              normative: "true"
              role: host
          tosca.relationships.Root:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.7.1
              normative: "true"
        properties: {}
        attributes:
          state:
            description: The state of the relationship instance.
            value: initial
          tosca_id:
            description: A unique identifier of the realized instance of a Relationship
              Template that derives from any TOSCA normative type.
            value: null
          tosca_name:
            description: This attribute reflects the name of the Relationship Template
              as defined in the TOSCA service template. This name is not unique to
              the realized instance model of corresponding deployed application as
              each template in the model can result in one or more instances (e.g.,
              scaled) when orchestrated to a provider environment.
            value: null
        interfaces:
          Configure:
            description: The lifecycle interfaces define the essential, normative
              operations that each TOSCA Relationship Types may support.
            types:
              tosca.interfaces.Root:
                metadata:
                  citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                  citation_location: 5.8.3
                  normative: "true"
              tosca.interfaces.relationship.Configure:
                metadata:
                  citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                  citation_location: 5.8.5
                  normative: "true"
            inputs: {}
            operations:
              add_source:
                description: Operation to notify the target node of a source node
                  which is now available via a relationship.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              add_target:
                description: Operation to notify the source node of a target node
                  being added via a relationship.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              post_configure_source:
                description: Operation to post-configure the source endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              post_configure_target:
                description: Operation to post-configure the target endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              pre_configure_source:
                description: Operation to pre-configure the source endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              pre_configure_target:
                description: Operation to pre-configure the target endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              remove_source:
                description: Operation to remove the source node.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              remove_target:
                description: Operation to remove a target node.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              target_changed:
                description: Operation to notify source some property or attribute
                  of the target changed
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
            notifications: {}
      path: topology_template.node_templates["my_SWI4_windows"].requirements[0]
    - name: port
      capabilityTypeName: tosca.capabilities.network.Bindable
      capabilityName: ""
      nodeTypeName: tosca.nodes.network.Port
      nodeTemplateName: ""
      nodeTemplatePropertyConstraints: {}
      capabilityPropertyConstraints: {}
      relationship:
        description: This type represents a network association relationship between
          Port and Compute node types.
        types:
          tosca.relationships.DependsOn:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.7.2
              normative: "true"
          tosca.relationships.Root:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.7.1
              normative: "true"
          tosca.relationships.network.BindsTo:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 8.5.5
              normative: "true"
        properties: {}
        attributes:
          state:
            description: The state of the relationship instance.
            value: initial
          tosca_id:
            description: A unique identifier of the realized instance of a Relationship
              Template that derives from any TOSCA normative type.
            value: null
          tosca_name:
            description: This attribute reflects the name of the Relationship Template
              as defined in the TOSCA service template. This name is not unique to
              the realized instance model of corresponding deployed application as
              each template in the model can result in one or more instances (e.g.,
              scaled) when orchestrated to a provider environment.
            value: null
        interfaces:
          Configure:
            description: The lifecycle interfaces define the essential, normative
              operations that each TOSCA Relationship Types may support.
            types:
              tosca.interfaces.Root:
                metadata:
                  citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                  citation_location: 5.8.3
                  normative: "true"
              tosca.interfaces.relationship.Configure:
                metadata:
                  citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                  citation_location: 5.8.5
                  normative: "true"
            inputs: {}
            operations:
              add_source:
                description: Operation to notify the target node of a source node
                  which is now available via a relationship.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              add_target:
                description: Operation to notify the source node of a target node
                  being added via a relationship.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              post_configure_source:
                description: Operation to post-configure the source endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              post_configure_target:
                description: Operation to post-configure the target endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              pre_configure_source:
                description: Operation to pre-configure the source endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              pre_configure_target:
                description: Operation to pre-configure the target endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              remove_source:
                description: Operation to remove the source node.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              remove_target:
                description: Operation to remove a target node.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              target_changed:
                description: Operation to notify source some property or attribute
                  of the target changed
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
            notifications: {}
      path: topology_template.node_templates["my_SWI4_windows"].requirements[1]
    - name: port
      capabilityTypeName: tosca.capabilities.network.Bindable
      capabilityName: ""
      nodeTypeName: tosca.nodes.network.Port
      nodeTemplateName: ""
      nodeTemplatePropertyConstraints: {}
      capabilityPropertyConstraints: {}
      relationship:
        description: This type represents a network association relationship between
          Port and Compute node types.
        types:
          tosca.relationships.DependsOn:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.7.2
              normative: "true"
          tosca.relationships.Root:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.7.1
              normative: "true"
          tosca.relationships.network.BindsTo:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 8.5.5
              normative: "true"
        properties: {}
        attributes:
          state:
            description: The state of the relationship instance.
            value: initial
          tosca_id:
            description: A unique identifier of the realized instance of a Relationship
              Template that derives from any TOSCA normative type.
            value: null
          tosca_name:
            description: This attribute reflects the name of the Relationship Template
              as defined in the TOSCA service template. This name is not unique to
              the realized instance model of corresponding deployed application as
              each template in the model can result in one or more instances (e.g.,
              scaled) when orchestrated to a provider environment.
            value: null
        interfaces:
          Configure:
            description: The lifecycle interfaces define the essential, normative
              operations that each TOSCA Relationship Types may support.
            types:
              tosca.interfaces.Root:
                metadata:
                  citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                  citation_location: 5.8.3
                  normative: "true"
              tosca.interfaces.relationship.Configure:
                metadata:
                  citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                  citation_location: 5.8.5
                  normative: "true"
            inputs: {}
            operations:
              add_source:
                description: Operation to notify the target node of a source node
                  which is now available via a relationship.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              add_target:
                description: Operation to notify the source node of a target node
                  being added via a relationship.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              post_configure_source:
                description: Operation to post-configure the source endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              post_configure_target:
                description: Operation to post-configure the target endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              pre_configure_source:
                description: Operation to pre-configure the source endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              pre_configure_target:
                description: Operation to pre-configure the target endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              remove_source:
                description: Operation to remove the source node.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              remove_target:
                description: Operation to remove a target node.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              target_changed:
                description: Operation to notify source some property or attribute
                  of the target changed
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
            notifications: {}
      path: topology_template.node_templates["my_SWI4_windows"].requirements[2]
    - name: CP9
      capabilityTypeName: tosca.capabilities.Node
      capabilityName: ""
      nodeTypeName: tosca.nodes.network.Port
      nodeTemplateName: ""
      nodeTemplatePropertyConstraints: {}
      capabilityPropertyConstraints: {}
      relationship:
        description: This type represents a general dependency relationship between
          two nodes.
        types:
          tosca.relationships.DependsOn:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.7.2
              normative: "true"
          tosca.relationships.Root:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.7.1
              normative: "true"
        properties: {}
        attributes:
          state:
            description: The state of the relationship instance.
            value: initial
          tosca_id:
            description: A unique identifier of the realized instance of a Relationship
              Template that derives from any TOSCA normative type.
            value: null
          tosca_name:
            description: This attribute reflects the name of the Relationship Template
              as defined in the TOSCA service template. This name is not unique to
              the realized instance model of corresponding deployed application as
              each template in the model can result in one or more instances (e.g.,
              scaled) when orchestrated to a provider environment.
            value: null
        interfaces:
          Configure:
            description: The lifecycle interfaces define the essential, normative
              operations that each TOSCA Relationship Types may support.
            types:
              tosca.interfaces.Root:
                metadata:
                  citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                  citation_location: 5.8.3
                  normative: "true"
              tosca.interfaces.relationship.Configure:
                metadata:
                  citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                  citation_location: 5.8.5
                  normative: "true"
            inputs: {}
            operations:
              add_source:
                description: Operation to notify the target node of a source node
                  which is now available via a relationship.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              add_target:
                description: Operation to notify the source node of a target node
                  being added via a relationship.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              post_configure_source:
                description: Operation to post-configure the source endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              post_configure_target:
                description: Operation to post-configure the target endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              pre_configure_source:
                description: Operation to pre-configure the source endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              pre_configure_target:
                description: Operation to pre-configure the target endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              remove_source:
                description: Operation to remove the source node.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              remove_target:
                description: Operation to remove a target node.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              target_changed:
                description: Operation to notify source some property or attribute
                  of the target changed
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
            notifications: {}
      path: topology_template.node_templates["my_SWI4_windows"].requirements[3]
    - name: CP8
      capabilityTypeName: tosca.capabilities.Node
      capabilityName: ""
      nodeTypeName: tosca.nodes.network.Port
      nodeTemplateName: ""
      nodeTemplatePropertyConstraints: {}
      capabilityPropertyConstraints: {}
      relationship:
        description: This type represents a general dependency relationship between
          two nodes.
        types:
          tosca.relationships.DependsOn:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.7.2
              normative: "true"
          tosca.relationships.Root:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.7.1
              normative: "true"
        properties: {}
        attributes:
          state:
            description: The state of the relationship instance.
            value: initial
          tosca_id:
            description: A unique identifier of the realized instance of a Relationship
              Template that derives from any TOSCA normative type.
            value: null
          tosca_name:
            description: This attribute reflects the name of the Relationship Template
              as defined in the TOSCA service template. This name is not unique to
              the realized instance model of corresponding deployed application as
              each template in the model can result in one or more instances (e.g.,
              scaled) when orchestrated to a provider environment.
            value: null
        interfaces:
          Configure:
            description: The lifecycle interfaces define the essential, normative
              operations that each TOSCA Relationship Types may support.
            types:
              tosca.interfaces.Root:
                metadata:
                  citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                  citation_location: 5.8.3
                  normative: "true"
              tosca.interfaces.relationship.Configure:
                metadata:
                  citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                  citation_location: 5.8.5
                  normative: "true"
            inputs: {}
            operations:
              add_source:
                description: Operation to notify the target node of a source node
                  which is now available via a relationship.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              add_target:
                description: Operation to notify the source node of a target node
                  being added via a relationship.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              post_configure_source:
                description: Operation to post-configure the source endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              post_configure_target:
                description: Operation to post-configure the target endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              pre_configure_source:
                description: Operation to pre-configure the source endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              pre_configure_target:
                description: Operation to pre-configure the target endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              remove_source:
                description: Operation to remove the source node.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              remove_target:
                description: Operation to remove a target node.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              target_changed:
                description: Operation to notify source some property or attribute
                  of the target changed
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
            notifications: {}
      path: topology_template.node_templates["my_SWI4_windows"].requirements[4]
    capabilities:
      feature:
        description: The Node capability indicates the base capabilities of a TOSCA
          Node Type.
        types:
          tosca.capabilities.Node:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.5.2
              normative: "true"
              role: feature
          tosca.capabilities.Root:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.5.1
              normative: "true"
        properties: {}
        attributes: {}
        minRelationshipCount: 0
        maxRelationshipCount: -1
    interfaces:
      Standard:
        description: This lifecycle interface defines the essential, normative operations
          that TOSCA nodes may support.
        types:
          tosca.interfaces.Root:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.8.3
              normative: "true"
          tosca.interfaces.node.lifecycle.Standard:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.8.4
              normative: "true"
        inputs: {}
        operations:
          configure:
            description: Standard lifecycle configure operation.
            implementation: ""
            dependencies: []
            inputs: {}
            timeout: -1
            host: ""
          create:
            description: Standard lifecycle create operation.
            implementation: ""
            dependencies: []
            inputs: {}
            timeout: -1
            host: ""
          delete:
            description: Standard lifecycle delete operation.
            implementation: ""
            dependencies: []
            inputs: {}
            timeout: -1
            host: ""
          start:
            description: Standard lifecycle start operation.
            implementation: ""
            dependencies: []
            inputs: {}
            timeout: -1
            host: ""
          stop:
            description: Standard lifecycle stop operation.
            implementation: ""
            dependencies: []
            inputs: {}
            timeout: -1
            host: ""
        notifications: {}
    artifacts:
      patch:
        description: This artifact type represents the parent type for all deployment
          artifacts in TOSCA. This class of artifacts typically represents a binary
          packaging of an application or service that is used to install/create or
          deploy it as part of a node's lifecycle.
        types:
          tosca.artifacts.Deployment:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.4.3.1
              normative: "true"
          tosca.artifacts.Root:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.4.1
              normative: "true"
        properties: {}
        sourcePath: images/fw-filter-windows-10-x86_64.diff
        targetPath: ""
  my_virtualFirewall:
    description: an instance of the TR255B firewall with FG1
    types:
      org.tmforum.tr255c.nodes.firewall:
        metadata: {}
      org.tmforum.tr255c.nodes.firewall.fg1:
        metadata: {}
      tosca.nodes.Root:
        metadata:
          citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
          citation_location: 5.9.1
          normative: "true"
      tosca.nodes.org.tmforum.models:
        metadata: {}
      tosca.nodes.org.tmforum.models.sidmodels:
        metadata:
          sid_release: "19.0"
      tosca.nodes.org.tmforum.models.sidmodels.ResourceDomain:
        metadata:
          sid_release: "19.0"
      tosca.nodes.org.tmforum.models.sidmodels.ResourceDomain.ResourceABE:
        metadata:
          sid_release: "19.0"
      tosca.nodes.org.tmforum.models.sidmodels.ResourceDomain.ResourceABE.CompoundResourceABE:
        metadata:
          sid_release: "19.0"
      tosca.nodes.org.tmforum.models.sidmodels.ResourceDomain.ResourceABE.CompoundResourceABE.CompoundResource:
        metadata:
          sid_release: "19.0"
      tosca.nodes.tmforum:
        metadata: {}
    directives: []
    properties:
      operating_system:
        functionCall:
          url: file:C:\Users\802052047\OneDrive - BT Plc\Documents\MDM\TOSCA\TOSCA_for_TMForum\TR255C\vFirewall.yml
          path: topology_template.node_templates["my_virtualFirewall"].properties["operating_system"]
          location: 238,9
          name: get_input
          arguments:
          - value: os_type
    attributes:
      max_traffic_processed_GBs_per_sec:
        value: null
      state:
        description: The state of the node instance.
        value: initial
      status:
        description: |-
          This is an enumerated integer whose value indicates the current status of the object. The following values are defined: 0: Unknown 1: OK 2: Initializing 3: Starting 4: Paused 5: Stopping 6: Stopped 7: Degraded 8: Stressed 9: Predicted Failure 10: Error - General 11: Error - Non Recoverable 12: Not Installed or Not Present 13: In Maintenance 14: Unable To Contact 15: Lost Communications
          Stopped indicates that the CompoundResource is known to still exist, but it is no longer operational. However, it has not failed.
          Stressed indicates that the LogicalResource is functioning, but needs attention (e.g., it may be overheating, or overloaded in some way). This is similar to Predicted Failure, which indicates that this CompoundResource is functioning properly, but is predicting a failure in the near future.
          In Maintenance indicates that this LogicalResource is being configured, maintained, or otherwise administered and is NOT available for service
        value: null
      tosca_id:
        description: A unique identifier of the realized instance of a Node Template
          that derives from any TOSCA normative type.
        value: null
      tosca_name:
        description: This attribute reflects the name of the Node Template as defined
          in the TOSCA service template. This name is not unique to the realized instance
          model of corresponding deployed application as each template in the model
          can result in one or more instances (e.g., scaled) when orchestrated to
          a provider environment.
        value: null
    requirements:
    - name: core_software
      capabilityTypeName: tosca.capabilities.Root
      capabilityName: ""
      nodeTypeName: SWI1
      nodeTemplateName: ""
      nodeTemplatePropertyConstraints: {}
      capabilityPropertyConstraints: {}
      relationship:
        description: This type represents a general dependency relationship between
          two nodes.
        types:
          tosca.relationships.DependsOn:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.7.2
              normative: "true"
          tosca.relationships.Root:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.7.1
              normative: "true"
        properties: {}
        attributes:
          state:
            description: The state of the relationship instance.
            value: initial
          tosca_id:
            description: A unique identifier of the realized instance of a Relationship
              Template that derives from any TOSCA normative type.
            value: null
          tosca_name:
            description: This attribute reflects the name of the Relationship Template
              as defined in the TOSCA service template. This name is not unique to
              the realized instance model of corresponding deployed application as
              each template in the model can result in one or more instances (e.g.,
              scaled) when orchestrated to a provider environment.
            value: null
        interfaces:
          Configure:
            description: The lifecycle interfaces define the essential, normative
              operations that each TOSCA Relationship Types may support.
            types:
              tosca.interfaces.Root:
                metadata:
                  citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                  citation_location: 5.8.3
                  normative: "true"
              tosca.interfaces.relationship.Configure:
                metadata:
                  citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                  citation_location: 5.8.5
                  normative: "true"
            inputs: {}
            operations:
              add_source:
                description: Operation to notify the target node of a source node
                  which is now available via a relationship.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              add_target:
                description: Operation to notify the source node of a target node
                  being added via a relationship.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              post_configure_source:
                description: Operation to post-configure the source endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              post_configure_target:
                description: Operation to post-configure the target endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              pre_configure_source:
                description: Operation to pre-configure the source endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              pre_configure_target:
                description: Operation to pre-configure the target endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              remove_source:
                description: Operation to remove the source node.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              remove_target:
                description: Operation to remove a target node.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              target_changed:
                description: Operation to notify source some property or attribute
                  of the target changed
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
            notifications: {}
      path: topology_template.node_templates["my_virtualFirewall"].requirements[0]
    - name: filtering_software
      capabilityTypeName: tosca.capabilities.Root
      capabilityName: ""
      nodeTypeName: SWI2
      nodeTemplateName: ""
      nodeTemplatePropertyConstraints: {}
      capabilityPropertyConstraints: {}
      relationship:
        description: This type represents a general dependency relationship between
          two nodes.
        types:
          tosca.relationships.DependsOn:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.7.2
              normative: "true"
          tosca.relationships.Root:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.7.1
              normative: "true"
        properties: {}
        attributes:
          state:
            description: The state of the relationship instance.
            value: initial
          tosca_id:
            description: A unique identifier of the realized instance of a Relationship
              Template that derives from any TOSCA normative type.
            value: null
          tosca_name:
            description: This attribute reflects the name of the Relationship Template
              as defined in the TOSCA service template. This name is not unique to
              the realized instance model of corresponding deployed application as
              each template in the model can result in one or more instances (e.g.,
              scaled) when orchestrated to a provider environment.
            value: null
        interfaces:
          Configure:
            description: The lifecycle interfaces define the essential, normative
              operations that each TOSCA Relationship Types may support.
            types:
              tosca.interfaces.Root:
                metadata:
                  citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                  citation_location: 5.8.3
                  normative: "true"
              tosca.interfaces.relationship.Configure:
                metadata:
                  citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                  citation_location: 5.8.5
                  normative: "true"
            inputs: {}
            operations:
              add_source:
                description: Operation to notify the target node of a source node
                  which is now available via a relationship.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              add_target:
                description: Operation to notify the source node of a target node
                  being added via a relationship.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              post_configure_source:
                description: Operation to post-configure the source endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              post_configure_target:
                description: Operation to post-configure the target endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              pre_configure_source:
                description: Operation to pre-configure the source endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              pre_configure_target:
                description: Operation to pre-configure the target endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              remove_source:
                description: Operation to remove the source node.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              remove_target:
                description: Operation to remove a target node.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              target_changed:
                description: Operation to notify source some property or attribute
                  of the target changed
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
            notifications: {}
      path: topology_template.node_templates["my_virtualFirewall"].requirements[1]
    - name: inspection_software
      capabilityTypeName: tosca.capabilities.Root
      capabilityName: ""
      nodeTypeName: SWI4
      nodeTemplateName: ""
      nodeTemplatePropertyConstraints: {}
      capabilityPropertyConstraints: {}
      relationship:
        description: This type represents a general dependency relationship between
          two nodes.
        types:
          tosca.relationships.DependsOn:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.7.2
              normative: "true"
          tosca.relationships.Root:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.7.1
              normative: "true"
        properties: {}
        attributes:
          state:
            description: The state of the relationship instance.
            value: initial
          tosca_id:
            description: A unique identifier of the realized instance of a Relationship
              Template that derives from any TOSCA normative type.
            value: null
          tosca_name:
            description: This attribute reflects the name of the Relationship Template
              as defined in the TOSCA service template. This name is not unique to
              the realized instance model of corresponding deployed application as
              each template in the model can result in one or more instances (e.g.,
              scaled) when orchestrated to a provider environment.
            value: null
        interfaces:
          Configure:
            description: The lifecycle interfaces define the essential, normative
              operations that each TOSCA Relationship Types may support.
            types:
              tosca.interfaces.Root:
                metadata:
                  citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                  citation_location: 5.8.3
                  normative: "true"
              tosca.interfaces.relationship.Configure:
                metadata:
                  citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
                  citation_location: 5.8.5
                  normative: "true"
            inputs: {}
            operations:
              add_source:
                description: Operation to notify the target node of a source node
                  which is now available via a relationship.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              add_target:
                description: Operation to notify the source node of a target node
                  being added via a relationship.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              post_configure_source:
                description: Operation to post-configure the source endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              post_configure_target:
                description: Operation to post-configure the target endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              pre_configure_source:
                description: Operation to pre-configure the source endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              pre_configure_target:
                description: Operation to pre-configure the target endpoint.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              remove_source:
                description: Operation to remove the source node.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              remove_target:
                description: Operation to remove a target node.
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
              target_changed:
                description: Operation to notify source some property or attribute
                  of the target changed
                implementation: ""
                dependencies: []
                inputs: {}
                timeout: -1
                host: ""
            notifications: {}
      path: topology_template.node_templates["my_virtualFirewall"].requirements[2]
    capabilities:
      CP1:
        description: This is the default TOSCA type that should be used or extended
          to define a network endpoint capability. This includes the information to
          express a basic endpoint with a single port or a complex endpoint with multiple
          ports. By default the Endpoint is assumed to represent an address on a private
          network unless otherwise specified.
        types:
          tosca.capabilities.Endpoint:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.5.7
              normative: "true"
          tosca.capabilities.Root:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.5.1
              normative: "true"
        properties:
          initiator:
            description: The optional indicator of the direction of the connection.
            value: source
          network_name:
            description: 'The optional name (or ID) of the network this endpoint should
              be bound to. network_name: PRIVATE | PUBLIC | <network_name> | <network_id>.'
            value: PRIVATE
          protocol:
            description: 'The name of the protocol (i.e., the protocol prefix) that
              the endpoint accepts (any OSI Layer 4-7 protocols). Examples: http,
              https, ftp, tcp, udp, etc.'
            value: tcp
          secure:
            description: Requests for the endpoint to be secure and use credentials
              supplied on the ConnectsTo relationship.
            value: false
        attributes:
          ip_address:
            description: 'Note: This is the IP address as propagated up by the associated
              node''s host (Compute) container.'
            value: null
        minRelationshipCount: 0
        maxRelationshipCount: -1
      CP14:
        description: This is the default TOSCA type that should be used or extended
          to define a network endpoint capability. This includes the information to
          express a basic endpoint with a single port or a complex endpoint with multiple
          ports. By default the Endpoint is assumed to represent an address on a private
          network unless otherwise specified.
        types:
          tosca.capabilities.Endpoint:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.5.7
              normative: "true"
          tosca.capabilities.Root:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.5.1
              normative: "true"
        properties:
          initiator:
            description: The optional indicator of the direction of the connection.
            value: source
          network_name:
            description: 'The optional name (or ID) of the network this endpoint should
              be bound to. network_name: PRIVATE | PUBLIC | <network_name> | <network_id>.'
            value: PRIVATE
          protocol:
            description: 'The name of the protocol (i.e., the protocol prefix) that
              the endpoint accepts (any OSI Layer 4-7 protocols). Examples: http,
              https, ftp, tcp, udp, etc.'
            value: tcp
          secure:
            description: Requests for the endpoint to be secure and use credentials
              supplied on the ConnectsTo relationship.
            value: false
        attributes:
          ip_address:
            description: 'Note: This is the IP address as propagated up by the associated
              node''s host (Compute) container.'
            value: null
        minRelationshipCount: 0
        maxRelationshipCount: -1
      feature:
        description: The Node capability indicates the base capabilities of a TOSCA
          Node Type.
        types:
          tosca.capabilities.Node:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.5.2
              normative: "true"
              role: feature
          tosca.capabilities.Root:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.5.1
              normative: "true"
        properties: {}
        attributes: {}
        minRelationshipCount: 0
        maxRelationshipCount: -1
    interfaces:
      Standard:
        description: This is an enumerated integer whose value indicates the current
          status of the object
        types:
          tosca.interfaces.Root:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.8.3
              normative: "true"
          tosca.interfaces.node.lifecycle.Standard:
            metadata:
              citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
              citation_location: 5.8.4
              normative: "true"
          ? tosca.interfaces.node.lifecycle.org.tmforum.models.sidmodels.ResourceDomain.ResourceABE.CompoundResourceABE.CompoundResource.status
          : metadata:
              sid_release: "19.0"
              source: org.tmforum.models.sidmodels.ResourceDomain.ResourceABE.CompoundResourceABE.CompoundResource.status
        inputs: {}
        operations:
          configure:
            description: Standard lifecycle configure operation.
            implementation: ""
            dependencies: []
            inputs: {}
            timeout: -1
            host: ""
          create:
            description: '13: In Maintenance'
            implementation: ""
            dependencies: []
            inputs: {}
            timeout: -1
            host: ""
          delete:
            description: '12: Not Installed or Not Present'
            implementation: ""
            dependencies: []
            inputs: {}
            timeout: -1
            host: ""
          set_Lost_Communications:
            description: '15: Lost Communications'
            implementation: ""
            dependencies: []
            inputs: {}
            timeout: -1
            host: ""
          set_degraded:
            description: '7: Degraded'
            implementation: ""
            dependencies: []
            inputs: {}
            timeout: -1
            host: ""
          set_error_general:
            description: '10: Error - General'
            implementation: ""
            dependencies: []
            inputs: {}
            timeout: -1
            host: ""
          set_error_non_recoverable:
            description: '11: Error - Non Recoverable'
            implementation: ""
            dependencies: []
            inputs: {}
            timeout: -1
            host: ""
          set_initializing:
            description: '2: Initializing'
            implementation: ""
            dependencies: []
            inputs: {}
            timeout: -1
            host: ""
          set_paused:
            description: '4: Paused'
            implementation: ""
            dependencies: []
            inputs: {}
            timeout: -1
            host: ""
          set_predicted_failure:
            description: '9: Predicted Failure'
            implementation: ""
            dependencies: []
            inputs: {}
            timeout: -1
            host: ""
          set_starting:
            description: '3: Starting'
            implementation: ""
            dependencies: []
            inputs: {}
            timeout: -1
            host: ""
          set_stopping:
            description: '5: Stopping'
            implementation: ""
            dependencies: []
            inputs: {}
            timeout: -1
            host: ""
          set_stressed:
            description: '8: Stressed'
            implementation: ""
            dependencies: []
            inputs: {}
            timeout: -1
            host: ""
          set_unable_to_contact:
            description: '14: Unable To Contact'
            implementation: ""
            dependencies: []
            inputs: {}
            timeout: -1
            host: ""
          set_unknown:
            description: '0: Unknown'
            implementation: ""
            dependencies: []
            inputs: {}
            timeout: -1
            host: ""
          start:
            description: '1: OK'
            implementation: ""
            dependencies: []
            inputs: {}
            timeout: -1
            host: ""
          stop:
            description: '6: Stopped'
            implementation: ""
            dependencies: []
            inputs: {}
            timeout: -1
            host: ""
        notifications: {}
    artifacts: {}
groups: {}
policies:
  keep_together_policy:
    description: Keep associated nodes (groups of nodes) based upon SoftwareComponent
    types:
      tosca.policies.Placement:
        metadata:
          citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
          citation_location: 5.11.2
          normative: "true"
      tosca.policies.Root:
        metadata:
          citation: '[TOSCA-Simple-Profile-YAML-v1.3]'
          citation_location: 5.11.1
          normative: "true"
      tosca.policy.placement.Colocate:
        metadata: {}
    properties:
      affinity:
        value: tosca.nodes.SoftwareComponent
inputs: {}
outputs: {}
workflows: {}
substitution: null
metadata: {}
scriptNamespace:
  concat:
    origin: null
    path: ""
    sourceCode: |-
      // [TOSCA-Simple-Profile-YAML-v1.3] @ 4.3.1
      // [TOSCA-Simple-Profile-YAML-v1.2] @ 4.3.1
      // [TOSCA-Simple-Profile-YAML-v1.1] @ 4.3.1

      function evaluate() {
        var a = [];
        var length = arguments.length;
        for (var i = 0; i < length; i++) {
          var argument = arguments[i];
          if (argument.$string !== undefined)
            argument = argument.$string;
          a.push(argument);
        }
        return a.join('');
      }
    nativeArgumentIndexes: []
  equal:
    origin: null
    path: ""
    sourceCode: |-
      // [TOSCA-Simple-Profile-YAML-v1.3] @ 3.6.3
      // [TOSCA-Simple-Profile-YAML-v1.2] @ 3.6.3
      // [TOSCA-Simple-Profile-YAML-v1.1] @ 3.5.2

      clout.exec('tosca.helpers');

      function validate(v1, v2) {
        if (arguments.length !== 2)
          throw 'must have 1 argument';
        return tosca.getComparable(v1) == tosca.getComparable(v2);
      }
    nativeArgumentIndexes:
    - 0
  get_artifact:
    origin: null
    path: ""
    sourceCode: |-
      // [TOSCA-Simple-Profile-YAML-v1.3] @ 4.8.1
      // [TOSCA-Simple-Profile-YAML-v1.2] @ 4.8.1
      // [TOSCA-Simple-Profile-YAML-v1.1] @ 4.8.1

      function evaluate() {
        return 'TODO';
      }
    nativeArgumentIndexes: []
  get_attribute:
    origin: null
    path: ""
    sourceCode: |-
      // [TOSCA-Simple-Profile-YAML-v1.3] @ 4.5.1
      // [TOSCA-Simple-Profile-YAML-v1.2] @ 4.5.1
      // [TOSCA-Simple-Profile-YAML-v1.1] @ 4.5.1

      clout.exec('tosca.helpers');

      function evaluate(entity, attribute) {
        var length = arguments.length;
        if (length < 2)
          throw 'must have at least 2 arguments';
        var nodeTemplate = tosca.getNodeTemplate(entity);
        var attributes = nodeTemplate.attributes;
        if (!(attribute in attributes))
          throw puccini.sprintf('attribute "%s" not found in "%s"', attribute, nodeTemplate.name);
        var r = clout.coerce(attributes[attribute]);
        for (var i = 2; i < length; i++)
          r = r[arguments[i]];
        return r;
      }
    nativeArgumentIndexes: []
  get_input:
    origin: null
    path: ""
    sourceCode: |-
      // [TOSCA-Simple-Profile-YAML-v1.3] @ 4.4.1
      // [TOSCA-Simple-Profile-YAML-v1.2] @ 4.4.1
      // [TOSCA-Simple-Profile-YAML-v1.1] @ 4.4.1

      clout.exec('tosca.helpers');

      function evaluate(input) {
        if (arguments.length !== 1)
          throw 'must have 1 argument';
        if (!tosca.isTosca(clout))
          throw 'Clout is not TOSCA';
        var inputs = clout.properties.tosca.inputs;
        if (!(input in inputs))
          throw puccini.sprintf('input "%s" not found', input);
        var r = inputs[input];
        r = clout.coerce(r);
        return r;
      }
    nativeArgumentIndexes: []
  get_nodes_of_type:
    origin: null
    path: ""
    sourceCode: |-
      // [TOSCA-Simple-Profile-YAML-v1.3] @ 4.7.1
      // [TOSCA-Simple-Profile-YAML-v1.2] @ 4.7.1
      // [TOSCA-Simple-Profile-YAML-v1.1] @ 4.7.1

      clout.exec('tosca.helpers');

      function evaluate(typeName) {
        if (arguments.length !== 1)
          throw 'must have 1 argument';
        var names = [];
        for (var name in clout.vertexes) {
          var vertex = clout.vertexes[name];
          if (tosca.isTosca(vertex))
            names.push(vertex.properties.name);
        }
        return names;
      }
    nativeArgumentIndexes: []
  get_operation_output:
    origin: null
    path: ""
    sourceCode: |-
      // [TOSCA-Simple-Profile-YAML-v1.3] @ 4.6.1
      // [TOSCA-Simple-Profile-YAML-v1.2] @ 4.6.1
      // [TOSCA-Simple-Profile-YAML-v1.1] @ 4.6.1

      function evaluate() {
        return 'TODO';
      }
    nativeArgumentIndexes: []
  get_property:
    origin: null
    path: ""
    sourceCode: |-
      // [TOSCA-Simple-Profile-YAML-v1.3] @ 4.4.2
      // [TOSCA-Simple-Profile-YAML-v1.2] @ 4.4.2
      // [TOSCA-Simple-Profile-YAML-v1.1] @ 4.4.2

      clout.exec('tosca.helpers');

      function evaluate(entity, property) {
        var length = arguments.length;
        if (length < 2)
          throw 'must have at least 2 arguments';
        var nodeTemplate = tosca.getNodeTemplate(entity);
        var properties = nodeTemplate.properties;
        if (!(property in properties))
          throw puccini.sprintf('property "%s" not found in "%s"', property, nodeTemplate.name);
        var r = clout.coerce(properties[property]);
        for (var i = 2; i < length; i++)
          r = r[arguments[i]];
        return r;
      }
    nativeArgumentIndexes: []
  greater_or_equal:
    origin: null
    path: ""
    sourceCode: |-
      // [TOSCA-Simple-Profile-YAML-v1.3] @ 3.6.3
      // [TOSCA-Simple-Profile-YAML-v1.2] @ 3.6.3
      // [TOSCA-Simple-Profile-YAML-v1.1] @ 3.5.2

      clout.exec('tosca.helpers');

      function validate(v1, v2) {
        if (arguments.length !== 2)
          throw 'must have 1 argument';
        return tosca.getComparable(v1) >= tosca.getComparable(v2);
      }
    nativeArgumentIndexes:
    - 0
  greater_than:
    origin: null
    path: ""
    sourceCode: |-
      // [TOSCA-Simple-Profile-YAML-v1.3] @ 3.6.3
      // [TOSCA-Simple-Profile-YAML-v1.2] @ 3.6.3
      // [TOSCA-Simple-Profile-YAML-v1.1] @ 3.5.2

      clout.exec('tosca.helpers');

      function validate(v1, v2) {
        if (arguments.length !== 2)
          throw 'must have 1 argument';
        return tosca.getComparable(v1) > tosca.getComparable(v2);
      }
    nativeArgumentIndexes:
    - 0
  in_range:
    origin: null
    path: ""
    sourceCode: |-
      // [TOSCA-Simple-Profile-YAML-v1.3] @ 3.6.3
      // [TOSCA-Simple-Profile-YAML-v1.2] @ 3.6.3
      // [TOSCA-Simple-Profile-YAML-v1.1] @ 3.5.2

      clout.exec('tosca.helpers');

      function validate(v, lower, upper) {
        if (arguments.length !== 3)
          throw 'must have 2 arguments';
        v = tosca.getComparable(v);
        return (v >= tosca.getComparable(lower)) && (v <= tosca.getComparable(upper));
      }
    nativeArgumentIndexes:
    - 0
    - 1
  join:
    origin: null
    path: ""
    sourceCode: |-
      // [TOSCA-Simple-Profile-YAML-v1.3] @ 4.3.2

      function evaluate() {
        var length = arguments.length;
        if ((length < 1) || (length > 2))
          throw 'must have 1 or 2 arguments';
        var delimiter = (length == 2) ? arguments[1] : '';
        var args = arguments[0];
        length = args.length;
        var a = [];
        for (var i = 0; i < length; i++) {
          var argument = args[i];
          if (argument.$string !== undefined)
            argument = argument.$string;
          a.push(argument);
        }
        return a.join(delimiter);
      }
    nativeArgumentIndexes: []
  length:
    origin: null
    path: ""
    sourceCode: |-
      // [TOSCA-Simple-Profile-YAML-v1.3] @ 3.6.3
      // [TOSCA-Simple-Profile-YAML-v1.2] @ 3.6.3
      // [TOSCA-Simple-Profile-YAML-v1.1] @ 3.5.2

      function validate(v, length) {
        if (arguments.length !== 2)
          throw 'must have 1 argument';
        if (v.$string !== undefined)
          v = v.$string;
        return v.length == length;
      }
    nativeArgumentIndexes: []
  less_or_equal:
    origin: null
    path: ""
    sourceCode: |-
      // [TOSCA-Simple-Profile-YAML-v1.3] @ 3.6.3
      // [TOSCA-Simple-Profile-YAML-v1.2] @ 3.6.3
      // [TOSCA-Simple-Profile-YAML-v1.1] @ 3.5.2

      clout.exec('tosca.helpers');

      function validate(v1, v2) {
        if (arguments.length !== 2)
          throw 'must have 1 argument';
        return tosca.getComparable(v1) <= tosca.getComparable(v2);
      }
    nativeArgumentIndexes:
    - 0
  less_than:
    origin: null
    path: ""
    sourceCode: |-
      // [TOSCA-Simple-Profile-YAML-v1.3] @ 3.6.3
      // [TOSCA-Simple-Profile-YAML-v1.2] @ 3.6.3
      // [TOSCA-Simple-Profile-YAML-v1.1] @ 3.5.2

      clout.exec('tosca.helpers');

      function validate(v1, v2) {
        if (arguments.length !== 2)
          throw 'must have 1 argument';
        return tosca.getComparable(v1) < tosca.getComparable(v2);
      }
    nativeArgumentIndexes:
    - 0
  max_length:
    origin: null
    path: ""
    sourceCode: |-
      // [TOSCA-Simple-Profile-YAML-v1.3] @ 3.6.3
      // [TOSCA-Simple-Profile-YAML-v1.2] @ 3.6.3
      // [TOSCA-Simple-Profile-YAML-v1.1] @ 3.5.2

      function validate(v, length) {
        if (arguments.length !== 2)
          throw 'must have 1 argument';
        if (v.$string !== undefined)
          v = v.$string;
        return v.length <= length;
      }
    nativeArgumentIndexes: []
  min_length:
    origin: null
    path: ""
    sourceCode: |-
      // [TOSCA-Simple-Profile-YAML-v1.3] @ 3.6.3
      // [TOSCA-Simple-Profile-YAML-v1.2] @ 3.6.3
      // [TOSCA-Simple-Profile-YAML-v1.1] @ 3.5.2

      function validate(v, length) {
        if (arguments.length !== 2)
          throw 'must have 1 argument';
        if (v.$string !== undefined)
          v = v.$string;
        return v.length >= length;
      }
    nativeArgumentIndexes: []
  pattern:
    origin: null
    path: ""
    sourceCode: |-
      // [TOSCA-Simple-Profile-YAML-v1.3] @ 3.6.3
      // [TOSCA-Simple-Profile-YAML-v1.2] @ 3.6.3
      // [TOSCA-Simple-Profile-YAML-v1.1] @ 3.5.2

      function validate(v, re) {
        if (arguments.length !== 2)
          throw 'must have 1 argument';
        if (v.$string !== undefined)
          v = v.$string;
        return new RegExp('^' + re + '$').test(v);
      }
    nativeArgumentIndexes: []
  schema:
    origin: null
    path: ""
    sourceCode: |-
      // [TOSCA-Simple-Profile-YAML-v1.3] @ 3.6.3

      function validate() {
        // TODO
        return true;
      }
    nativeArgumentIndexes: []
  token:
    origin: null
    path: ""
    sourceCode: |-
      // [TOSCA-Simple-Profile-YAML-v1.3] @ 4.3.3
      // [TOSCA-Simple-Profile-YAML-v1.2] @ 4.3.3
      // [TOSCA-Simple-Profile-YAML-v1.1] @ 4.3.2

      function evaluate(v, separators, index) {
        if (arguments.length !== 3)
          throw 'must have 3 arguments';
        if (v.$string !== undefined)
          v = v.$string;
        var s = v.split(new RegExp('[' + escape(separators) + ']'));
        return s[index];
      }

      function escape(s) {
        return s.replace(/[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g, '\\$&');
      }
    nativeArgumentIndexes: []
  tosca.coerce:
    origin:
      path: /tosca/simple/1.3
      data: ""
    path: internal:/tosca/common/1.0/js/coerce.js
    sourceCode: ""
    nativeArgumentIndexes: []
  tosca.helpers:
    origin:
      path: /tosca/simple/1.3
      data: ""
    path: internal:/tosca/common/1.0/js/helpers.js
    sourceCode: ""
    nativeArgumentIndexes: []
  tosca.resolve:
    origin:
      path: /tosca/simple/1.3
      data: ""
    path: internal:/tosca/common/1.0/js/resolve.js
    sourceCode: ""
    nativeArgumentIndexes: []
  tosca.utils:
    origin:
      path: /tosca/simple/1.3
      data: ""
    path: internal:/tosca/common/1.0/js/utils.js
    sourceCode: ""
    nativeArgumentIndexes: []
  valid_values:
    origin: null
    path: ""
    sourceCode: |-
      // [TOSCA-Simple-Profile-YAML-v1.3] @ 3.6.3
      // [TOSCA-Simple-Profile-YAML-v1.2] @ 3.6.3
      // [TOSCA-Simple-Profile-YAML-v1.1] @ 3.5.2

      function validate(v) {
        var values = Array.prototype.slice.call(arguments, 1);
        return values.indexOf(v) !== -1;
      }
    nativeArgumentIndexes: []

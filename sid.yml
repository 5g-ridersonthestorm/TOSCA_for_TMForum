tosca_definitions_version: tosca_simple_yaml_1_0
####################
capability_types:
####################

  ##################
  # Capabilities to implement SID 
  ####################
        
  tosca.capabilities.PhysicalResourceSpecAttributes:
    description: >-
      Equates to tosca.nodes.org.tmforum.models.sidmodels.ResourceDomain.ResourceSpecificationABE.PhysicalResourceSpecificationABE.PhysicalResourceSpecAttributes
    # No need to use an inheritance tree for this as it contains no inherited attributes. No harm in doing so if it makes sense for automated mapping but for now derive from root
    derived_from: tosca.capabilities.Root
    properties:
      modelNumber:
        type: string 
        required: True
      vendorName:
        type: string
        required: True
    attributes:
      skuNumber:
        type: string
      partNumber:
        type: string

####################
interface_types:

  tosca.interfaces.node.lifecycle.lrStatus:
    derived_from: tosca.interfaces.node.lifecycle.Standard
    description: org.tmforum.models.sidmodels.ResourceDomain.ResourceABE.LogicalResourceABE.LogicalResource.lrStatus
    unknown:
      description: Unknown
    error_degraded:
      description: Degraded
    error_stressed:
      description: Stressed
    error_predicted_failure:
      description: Predicted Failure
    error_non_recoverable:
      description: Error - Non Recoverable
    error_unable_to_connect:
      description: Unable To Contact
    error_lost_communications:
      description: Lost Communications

  tosca.interfaces.node.lifecycle.org.tmforum.models.sidmodels.ResourceDomain.ResourceABE.CompoundResourceABE.CompoundResource.status:
    derived_from: tosca.interfaces.Root
    description: org.tmforum.models.sidmodels.ResourceDomain.ResourceABE.CompoundResourceABE.CompoundResource.status
    # Although all values from CompoundResource.status are included, only those which indicate a target resting state are likely to be used in a practical interface. 
    # e.g. Move to the OK state rather the move to the Initializing state
    # Note that values are strings not integers to comply with TOSCA format
    '0':
      description: Unknown
    '1':
      description: OK
    '2': 
      description: Initializing
    '3':
      description: Starting
    '4':
      description: Paused
    '5':
      description: Stopping
    '6':
      description: Stopped
    '7':
      description: Degraded
    '8':
      description: Stressed
    '9':
      description: Predicted Failure
    '10':
      description: Error - General
    '11':
      description: Error - Non Recoverable
    '12':
      description: Not Installed or Not Present
    '13':
      description: In Maintenance
    '14':
      description: Unable To Contact
    '15':
      description: Lost Communications
####################

####################
node_types:
####################

  ###################
  # node types from SID model
  ###################
  
  tosca.nodes.tmforum:
    derived_from: tosca.nodes.Root

  tosca.nodes.org.tmforum.models:
    derived_from: tosca.nodes.tmforum
  
  tosca.nodes.org.tmforum.models.sidmodels:
    derived_from: tosca.nodes.org.tmforum.models
    properties:
      # mapping examples of those attributes of SID RootEntity which are not relationships and are not read only to TOSCA properties
      # JSON and therefore YAML and TOSCA does not have a syntax to declare that an attribute must be unique and so that (and
      # possibly other) aspect of the SID defintion is lost when mapping to TOSCA
      description:
        type: string
        required: False
        description: This is a string, and defines a textual identifier of an object
      name:
        type: string
        description: Represents a user-friendly identifier of an object...
        required: False
    # attributes:
    # If there were any SID read only attributes they would be mapped to TOSCA attributes here
      
  tosca.nodes.org.tmforum.models.sidmodels.ResourceDomain:
    derived_from: tosca.nodes.org.tmforum.models.sidmodels
    
  tosca.nodes.org.tmforum.models.sidmodels.ResourceDomain.ResourceABE:
    derived_from: tosca.nodes.org.tmforum.models.sidmodels.ResourceDomain
    
  tosca.nodes.org.tmforum.models.sidmodels.ResourceDomain.ResourceABE.CompoundResourceABE:
    derived_from: tosca.nodes.org.tmforum.models.sidmodels.ResourceDomain.ResourceABE
    
  tosca.nodes.org.tmforum.models.sidmodels.ResourceDomain.ResourceABE.CompoundResourceABE.CompoundResource:
    derived_from: tosca.nodes.org.tmforum.models.sidmodels.ResourceDomain.ResourceABE.CompoundResourceABE
    attributes:
      status:
        type: integer
        description: "This is an enumerated integer whose value indicates the current status of the object. The following values are defined:
          0: Unknown
          1: OK
          2: Initializing
          3: Starting
          4: Paused
          5: Stopping
          6: Stopped
          7: Degraded
          8: Stressed
          9: Predicted Failure
          10: Error - General
          11: Error - Non Recoverable
          12: Not Installed or Not Present
          13: In Maintenance
          14: Unable To Contact
          15: Lost Communications

          Stopped indicates that the CompoundResource is known to still exist, but it is no longer operational. However, it has not failed.

          Stressed indicates that the LogicalResource is functioning, but needs attention (e.g., it may be overheating, or overloaded in some way). This is similar to Predicted Failure, which indicates that this CompoundResource is functioning properly, but is predicting a failure in the near future.

          In Maintenance indicates that this LogicalResource is being configured, maintained, or otherwise administered and is NOT available for service"


  tosca.nodes.org.tmforum.models.sidmodels.ResourceDomain.ResourceABE.LogicalResourceABE:
    derived_from: tosca.nodes.org.tmforum.models.sidmodels.ResourceDomain.ResourceABE

  tosca.nodes.org.tmforum.models.sidmodels.ResourceDomain.ResourceABE.LogicalResourceABE.LogicalResource:
    attributes:
      lrStatus:
        type: integer
        description: "This is an enumerated integer whose value indicates the current status of the object. The following values are defined:
        0: Unknown
        1: OK
        2: Initializing
        3: Starting
        4: Paused
        5: Stopping
        6: Stopped
        7: Degraded
        8: Stressed
        9: Predicted Failure
        10: Error - General
        11: Error - Non Recoverable
        12: Not Installed or Not Present
        13: In Maintenance
        14: Unable To Contact
        15: Lost Communications

        Stopped indicates that the LogicalResource is known to still exist, but it is no longer operational. However, it has not failed.

        Stressed indicates that the LogicalResource is functioning, but needs attention (e.g., it may be overheating, or overloaded in some way). This is similar to Predicted Failure, which indicates that this LogicalResource is functioning properly, but is predicting a failure in the near future.

        In Maintenance indicates that this LogicalResource is being configured, maintained, or otherwise administered and is NOT available for service.

        Unable To Contact indicates that the monitoring system has knowledge of this LogicalResource but has never been able to establish communications with it. In contrast, Lost Commmunications indicates that the LogicalResource has been contacted successfully in the past and is known to still exist; however, it is currently unreachable."
    interfaces:
      Standard:
        type: tosca.interfaces.node.lifecycle.lrStatus


  tosca.nodes.org.tmforum.models.sidmodels.ResourceDomain.ResourceABE.PhysicalResource:
    description: >-
      Equates to PhysicalResourceSpec in TM Forum Information Model (SID)
    derived_from: tosca.nodes.org.tmforum.models.sidmodels.ResourceDomain.ResourceABE
    # In SID a PhysicalResourceSpec has a 1 : 0..1 releation to PhysicalResourceAttributes
    # To model this in TOSCA we have these choices:
    # 1 use capability
      # We use this option
    # 2 use requirements: - dependency: capability
      # This places a requirement on node instances derived from this spec that they MUST instantiate a node with the capabiliies defined in PhysicalResourceAttributes
      # which is not what we want
    # 3 use requirements: - dependency: node
      # This places a requirement on node instances derived from this spec that they MUST instantiate a node with the type PhysicalResourceAttributes
      # which is not what we want
    # 4 Flatten the SID and add the attributes in this node
      # this validates but
        # loses the fact that if partNumber is present then vendorName must also be present 
        # attributes: 
        #   modelNumber:
        #     type: string
        #     required: false
        #   vendorName:
        #     type: string
        #     required: true
        #   skuNumber:
        #     type: string
        #     required: false
        #   partNumber:
        #     type: string
        #   required: true
    # 5 Make two node defintions, one with and one without the extension
      # but that doubles the number of child entities
    # 6 Use capability but to a new intermediate node type
      # Does not seem to add anything helpful
    capabilities:
      PhysicalResourceSpecFurtherExtendedBy:
        type: tosca.capabilities.PhysicalResourceSpecAttributes
    
  tosca.nodes.org.tmforum.models.sidmodels.ResourceDomain.ResourceABE.PhysicalResource.Hardware:
    derived_from: tosca.nodes.org.tmforum.models.sidmodels.ResourceDomain.ResourceABE.PhysicalResource

  tosca.nodes.org.tmforum.models.sidmodels.ResourceDomain.ResourceABE.PhysicalResource.Hardware.PhysicalPort:
    derived_from: tosca.nodes.org.tmforum.models.sidmodels.ResourceDomain.ResourceABE.PhysicalResource.Hardware
    capabilities:
      # SID does not define the linkable capability but all tosca ports are linkable
      link:
        type: tosca.capabilities.network.Linkable
   
  tosca.nodes.org.tmforum.models.sidmodels.ResourceDomain.ResourceABE.PhysicalResource.Hardware.ManagedHardware:
    derived_from: tosca.nodes.org.tmforum.models.sidmodels.ResourceDomain.ResourceABE.PhysicalResource.Hardware

  tosca.nodes.org.tmforum.models.sidmodels.ResourceDomain.ResourceABE.PhysicalResource.Hardware.ManagedHardware.PhysicalContainer:
    derived_from: tosca.nodes.org.tmforum.models.sidmodels.ResourceDomain.ResourceABE.PhysicalResource.Hardware.ManagedHardware

  tosca.nodes.org.tmforum.models.sidmodels.ResourceDomain.ResourceABE.PhysicalResource.Hardware.ManagedHardware.PhysicalContainer.Equipment:
    derived_from: tosca.nodes.org.tmforum.models.sidmodels.ResourceDomain.ResourceABE.PhysicalResource.Hardware.ManagedHardware.PhysicalContainer

  tosca.nodes.org.tmforum.models.sidmodels.ResourceDomain.ResourceABE.PhysicalResource.Hardware.ManagedHardware.PhysicalContainer.Equipment.Card:
    derived_from: tosca.nodes.org.tmforum.models.sidmodels.ResourceDomain.ResourceABE.PhysicalResource.Hardware.ManagedHardware.PhysicalContainer.Equipment

  tosca.nodes.org.tmforum.models.sidmodels.ResourceDomain.ResourceABE.PhysicalResource.Hardware.ManagedHardware.PhysicalContainer.EquipmentHolder:
    derived_from: tosca.nodes.org.tmforum.models.sidmodels.ResourceDomain.ResourceABE.PhysicalResource.Hardware.ManagedHardware.PhysicalContainer




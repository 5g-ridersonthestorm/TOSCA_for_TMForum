tosca_definitions_version: tosca_simple_yaml_1_0


imports:
  - file: modularRouterProfile.yml



####################
capability_types:
####################



  ####################
  # Capabilities to implement vendor specific features 
  ####################

  Acme.ComplexQosFeature:
    derived_from: tosca.capabilities.Root
    # TODO A capability probably maps to a SID (resource)function so resolve how to derive SID function from tosca capabilities
    description: The ComplexQosFeature capability is an example of how a (vendor specific) feature, when included on a Node Type or Template defintion, indicates that the node can implement that feature
    properties:
      enabled:
        type: boolean
        required: False
        default: False



####################
node_types:
####################

  
      
  ###################
  # node types for Acme modular router
  ###################

  tosca.nodes.port_card.Acme.1111:
  # We are going to use SID PhysicalResourceSpecFurtherExtendedBy in which both vendorName and modelNumber are mandatory
  # and so we derive ACME model 1111 directly from port_card rather than defining an Acme port_card and inheriting from that
    derived_from: tosca.nodes.port_card
    capabilities:
      # Including PhysicalResourceSpecFurtherExtendedBy as I want to specifiy the extended properties
      PhysicalResourceSpecFurtherExtendedBy:
        properties:
          # These are mandatory
          modelNumber: "1111"
          vendorName: Acme
        attributes:
          # These are optional and would not normally be specified in a topology template
          #skuNumber: c
          #partNumber: d

  tosca.nodes.processor_card.Acme.2222:
    derived_from: tosca.nodes.processor_card
    capabilities:
      # Including PhysicalResourceSpecFurtherExtendedBy as I want to specifiy the extended properties
      PhysicalResourceSpecFurtherExtendedBy:
        properties:
          # These are mandatory
          modelNumber: "2222"
          vendorName: Acme
        attributes:
          # These are optional and would not normally be specified in a topology template
          #skuNumber: c
          #partNumber: d

  tosca.nodes.PhysicalPort.OnCard.Acme:
    derived_from: tosca.nodes.PhysicalPort.OnCard
    requirements:
      - router_software:
          # This is one way of specifying the dependancy is on type of Acme
          node: tosca.nodes.RouterSoftware.Acme
      - port_card:
          node: tosca.nodes.port_card
          # This is another way of specifying the dependancy is on type of Acme
          node_filter:
          - port_card:
              properties:
                vendorName: { equal: Acme }
          relationship: dependancy

  tosca.nodes.RouterSoftware.Acme:
    derived_from: tosca.nodes.RouterSoftware

  tosca.nodes.Acme.Router.1000Series:
    derived_from: tosca.nodes.ModularRouter

  ###################
  # node types to add the advanced QoS feature
  ###################

  tosca.nodes.PhysicalPort.OnCard.Acme.Advanced:
    derived_from: tosca.nodes.PhysicalPort.OnCard.Acme
    capabilities: 
      complexQoS:
        type: Acme.ComplexQosFeature
      
    # Other Avanced features may be listed as subsequent capabilities


####################
description: Template for physical router within a tosca node.network
topology_template:
####################
  node_templates:

    my_port:
      type: tosca.nodes.PhysicalPort.OnCard.Acme.Advanced
      capabilities:
        complexQoS: 
          properties:
            enabled: True

    router:
      type: tosca.nodes.Acme.Router.1000Series
      properties:
        property1: a
        property2: 1
      attributes:
        attribute1: 2.0
        attribute2: true


    
